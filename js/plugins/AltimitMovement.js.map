{"version":3,"file":"AltimitMovement.js","sourceRoot":"","sources":["../../../src/AltimitMovement.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * MIT License\r\n *\r\n * Copyright (c) 2017-2018 Altimit Community Contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n//=============================================================================\r\n// AltimitMovement.js\r\n//=============================================================================\r\n// Based on https://github.com/snaphat/AltimitMovement.js\r\n//=============================================================================\r\n// Typescript\r\n// Fix double Show Choices following Show Text\r\n// Fix lag left/up when speed is decimal\r\n// Fix click/touch destination not resetting after transferring\r\n// Enable collider in notes\r\n// Added default \"wall\" preset collider as an example (1:1 square for player speed > 5 or just mapping)\r\n//  - Can now use <col><ps>wall</ps></col>(or <col><ps>1</ps></col>) to use preset collider (instead of <collider><preset>wall</preset></collider>)\r\n// seems that any event without images but with same as character priority will be a 1:1 square\r\n// Fixed Game_Player regionId thanks to GaryCXJk code\r\n// Removed obsolete plugin command from MV\r\n// Added airship auto getOn when clicked/touched option in plugin parameters\r\n// Example shapes available in plugin help\r\n// Factorized code\r\n//=============================================================================\r\n\r\n/*:\r\n * @target MZ\r\n * @plugindesc Vector-based character movement and collision\r\n * @author Altimit Community Contributors\r\n * @url https://github.com/AltimitSystems/mv-plugins/tree/master/movement\r\n *\r\n * @param player\r\n * @text Player\r\n * @desc Parameters related to player character.\r\n *\r\n * @param player_collider_list\r\n * @text Collider\r\n * @desc Default collider list for player character.\r\n * @parent player\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.7' r='0.25' />\"\r\n *\r\n * @param player_circular_movement\r\n * @text Normalize the movement?\r\n * @desc Should the diagonal movement be the same distance as the straight movement?\r\n * @parent player\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default true\r\n *\r\n * @param\r\n *\r\n * @param followers\r\n * @text Followers\r\n * @desc Parameters related to party followers.\r\n *\r\n * @param followers_distance\r\n * @text Follow distance\r\n * @desc Distance of 1 results in a tight chain. Distance of 2 will double the spacing.\r\n * @parent followers\r\n * @type number\r\n * @min 0\r\n * @decimals 2\r\n * @default 1.50\r\n *\r\n * @param followers_collider_list\r\n * @text Collider\r\n * @desc Default collider list for followers.\r\n * @parent followers\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.7' r='0.25' />\"\r\n *\r\n * @param followers_circular_movement\r\n * @text Normalize the movement?\r\n * @desc Should the diagonal movement be the same distance as the straight movement?\r\n * @parent followers\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default true\r\n *\r\n * @param\r\n *\r\n * @param vehicles\r\n * @text Vehicles\r\n * @desc Parameters related to the vehicles.\r\n *\r\n * @param vehicles_boat_collider_list\r\n * @text Boat collider\r\n * @desc Default collider list for the boat.\r\n * @parent vehicles\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.5' r='0.333' />\"\r\n *\r\n * @param vehicles_ship_collider_list\r\n * @text Ship collider\r\n * @desc Default collider list for the ship.\r\n * @parent vehicles\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.5' r='0.5' />\"\r\n *\r\n * @param vehicles_airship_collider_list\r\n * @text Airship collider\r\n * @desc Default collider list for the airship.\r\n * @parent vehicles\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.5' r='0.25' />\"\r\n *\r\n * @param\r\n *\r\n * @param event\r\n * @text Events\r\n * @desc Parameters related to events.\r\n *\r\n * @param event_character_collider_list\r\n * @text Character collider\r\n * @desc Default collider list for character events.\r\n * @parent event\r\n * @type note\r\n * @default \"<circle cx='0.5' cy='0.7' r='0.25' />\"\r\n *\r\n * @param event_tile_collider_list\r\n * @text Tile collider\r\n * @desc Default collider list for tile events.\r\n * @parent event\r\n * @type note\r\n * @default \"<rect x='0' y='0' width='1' height='1' />\"\r\n *\r\n * @param\r\n *\r\n * @param presets\r\n * @text Collider presets\r\n * @desc Preset colliders to be referenced by events.\r\n * @type note[]\r\n * @default [\"\\\"<name>wall</name><rect x='0.0' y='0.0' width='1.0' height='1.0' />\\\"\"]\r\n *\r\n * @param\r\n *\r\n * @param move_route\r\n * @text Move route behaviour\r\n * @desc Parameters related to character move routes.\r\n *\r\n * @param move_route_align_grid\r\n * @text Align move-routes to grid?\r\n * @desc If character is offset on a tile align them to the tile grid when moving.\r\n * @parent move_route\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default true\r\n *\r\n * @param\r\n *\r\n * @param input_config\r\n * @text Input config\r\n * @desc Configuration for input method.\r\n *\r\n * @param input_config_enable_touch_mouse\r\n * @text Use touch/mouse?\r\n * @desc Enables pointer-based input.\r\n * @parent input_config\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default true\r\n *\r\n * @param input_config_gamepad_mode\r\n * @text Gamepad mode\r\n * @desc Gamepad analogue stick input control.\r\n * @parent input_config\r\n * @type select\r\n * @option Movement + Facing\r\n * @value 3\r\n * @option Movement only\r\n * @value 2\r\n * @option Facing only\r\n * @value 1\r\n * @option Disabled\r\n * @value 0\r\n * @default 3\r\n *\r\n * @param auto_board_airship\r\n * @text Get in airship on touch, or player action required\r\n * @desc Get in airship on touch\r\n * @parent input_config\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default false\r\n *\r\n * @param\r\n *\r\n * @param play_test\r\n * @text Play-testing\r\n * @desc Parameters when running in Play-test mode.\r\n *\r\n * @param play_test_collision_mesh_caching\r\n * @text Use cached collision?\r\n * @desc Disabled caching will re-compile the collision mesh for maps that are in-development.\r\n * @parent play_test\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default false\r\n *\r\n *\r\n * @help AltimitMovement.ts\r\n *\r\n *\r\n * Usage:\r\n *  Plugin will automatically apply when ON.\r\n *\r\n *\r\n * Shapes exemples:\r\n * Rectangle (this example makes a tile-sized square)\r\n * <rect x='0.0' y='0.0' width='1.0' height='1.0' />\r\n *\r\n * Circle (this example makes a tile-sized circle)\r\n * <circle cx='0.5' cy='0.5' r='0.5' />\r\n *\r\n * Line (this example makes a line from top-left to bottom-right)\r\n * <line x1='0' y1='0' x2='1' y2='1' />\r\n *\r\n * Polygon must be convex and clock-wise-winding (this example makes a triangle)\r\n * <polygon points='0.0,1.0 0.5,0.0 1.0,1.0' />\r\n *\r\n * Regular polygon (this example makes a 5-pointed polygon; a pentagon)\r\n * <regular cx='0.5' cy='0.5' rx='0.5' ry='0.5' p='5' />\r\n *\r\n * About:\r\n *  Version 0.50 Beta with typescript\r\n *  Website https://github.com/ve-lee/AltimitMovement-MZ\r\n * @end\r\n * =============================================================================\r\n * Plugin Commands\r\n * =============================================================================\r\n *\r\n * @command setPlayerCollider\r\n * @text Change Player Collider\r\n * @desc Change Player's Collider to another preset.\r\n *\r\n * @arg colliderPreset\r\n * @text Change To\r\n * @type text\r\n * @default 1\r\n * @desc Change the collider to this preset(Defined in plugin settings).\r\n * Numbers are treated as an index into the preset array. 0 is the default collider.\r\n * Text will find a collider with a matching Name field.\r\n *\r\n * @command setThisCollider\r\n * @text Change This Collider\r\n * @desc Change this event's Collider to another preset.\r\n *\r\n * @arg colliderPreset\r\n * @text Change To\r\n * @type text\r\n * @default 1\r\n * @desc Change the collider to this preset(Defined in plugin settings).\r\n * Numbers are treated as an index into the preset array. 0 is the default collider.\r\n * Text will find a collider with a matching Name field.\r\n *\r\n * @command setEventCollider\r\n * @text Change Event Collider\r\n * @desc Change an event's Collider to another preset.\r\n *\r\n * @arg eventId\r\n * @text Event\r\n * @type text\r\n * @default 1\r\n * @desc Enter the event name or the ID number.\r\n *\r\n * @arg colliderPreset\r\n * @text Change To\r\n * @type text\r\n * @default 1\r\n * @desc Change the collider to this preset(Defined in plugin settings).\r\n * Numbers are treated as an index into the preset array. 0 is the default collider.\r\n * Text will find a collider with a matching Name field.\r\n *\r\n * @command setVehicleCollider\r\n * @text Change Vehicle Collider\r\n * @desc Change a vehicle's Collider to another preset.\r\n *\r\n * @arg vehicleId\r\n * @text Vehicle\r\n * @type select\r\n * @option Boat\r\n * @value boat\r\n * @option Ship\r\n * @value ship\r\n * @option Airship\r\n * @value airship\r\n * @default boat\r\n * @desc Select the vehicle to change the collider for.\r\n *\r\n * @arg colliderPreset\r\n * @text Change To\r\n * @type text\r\n * @default 1\r\n * @desc Change the collider to this preset(Defined in plugin settings).\r\n * Numbers are treated as an index into the preset array. 0 is the default collider.\r\n * Text will find a collider with a matching Name field.\r\n *\r\n * @command setFollowerCollider\r\n * @text Change Follower Collider\r\n * @desc Change a Follower's Collider to another preset.\r\n *\r\n * @arg followerId\r\n * @text Follower\r\n * @type select\r\n * @option 1\r\n * @value 1\r\n * @option 2\r\n * @value 2\r\n * @option 3\r\n * @value 3\r\n * @default 1\r\n * @desc Select the follower to change the collider for.\r\n *\r\n * @arg colliderPreset\r\n * @text Change To\r\n * @type text\r\n * @default 1\r\n * @desc Change the collider to this preset(Defined in plugin settings).\r\n * Numbers are treated as an index into the preset array. 0 is the default collider.\r\n * Text will find a collider with a matching Name field.\r\n *\r\n *\r\n * @command setFollowersDistance\r\n * @text Change Followers Distance\r\n * @desc Change a Follower's follow distance from the player.\r\n *\r\n * @arg distance\r\n * @text Following Distance\r\n * @type number\r\n * @decimals 2\r\n * @default 0.25\r\n * @desc The follow distance in tiles.\r\n *\r\n * @command setFollowersFollow\r\n * @text Set Followers Can Follow\r\n * @desc Change if followers can follow the player.\r\n *\r\n * @arg followerId\r\n * @text Follower\r\n * @type select\r\n * @option 1\r\n * @value 1\r\n * @option 2\r\n * @value 2\r\n * @option 3\r\n * @value 3\r\n * @option All\r\n * @value all\r\n * @default 1\r\n * @desc Select the follower to change.\r\n *\r\n * @arg shouldFollow\r\n * @text Should Follow?\r\n * @type boolean\r\n * @on Follow\r\n * @off Don't Follow\r\n * @default true\r\n * @desc Select if the follower should follow the player.\r\n *\r\n * @command setMoveAlign\r\n * @text Change Move Route Alignment\r\n * @desc Change if move routes should align to the grid.\r\n *\r\n * @arg alignToGrid\r\n * @text Align To Grid?\r\n * @type boolean\r\n * @on Align To Grid\r\n * @off Don't Align To Grid\r\n * @default true\r\n * @desc Move route commands will align to the grid.\r\n *\r\n *\r\n * @command move\r\n * @text Move\r\n * @desc Do an advanced movement command\r\n *\r\n * @arg moveCommand\r\n * @text Move Command\r\n * @type struct<MoveStep>\r\n * @desc Enter advanced movement commands\r\n *\r\n * @arg wait\r\n * @text Wait For Completion\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default true\r\n * @desc Waits for all movement to finish\r\n *\r\n * @arg isSkippable\r\n * @text Skip If Cannot Move\r\n * @type boolean\r\n * @on Yes\r\n * @off No\r\n * @default false\r\n * @desc Skips any command that would move a character into an impassable location.\r\n *\r\n *\r\n * @command setTouchMouse\r\n * @text Change Touch/Mouse Input\r\n * @desc Change if Touch/Mouse Input is enabled.\r\n *\r\n * @arg value\r\n * @text Touch/Mouse Enabled\r\n * @type boolean\r\n * @default false\r\n * @desc Allows the player can move their character with mouse or touchscreen input.\r\n *\r\n * =============================================================================\r\n * Struct Definitions\r\n * =============================================================================\r\n */\r\n/*~struct~MoveStep:\r\n *\r\n * @param mvr\r\n * @text Mover\r\n * @type select\r\n * @default this\r\n * @option Player\r\n * @value player\r\n * @option This\r\n * @value this\r\n * @option Event\r\n * @value event\r\n * @option Follower1\r\n * @value follower1\r\n * @option Follower2\r\n * @value follower2\r\n * @option Follower3\r\n * @value follower3\r\n * @option Boat\r\n * @value boat\r\n * @option Ship\r\n * @value ship\r\n * @option Airship\r\n * @value airship\r\n *\r\n * @desc Select what you want to move.\r\n * If you select event, also fill out the Mover Event Id field.\r\n *\r\n * @param dir\r\n * @text Direction\r\n * @type select\r\n * @default random\r\n * @option Random\r\n * @value random\r\n * @option ↑\r\n * @option ↗\r\n * @option →\r\n * @option ↘\r\n * @option ↓\r\n * @option ↙\r\n * @option ←\r\n * @option ↖\r\n * @option Forward\r\n * @value forward\r\n * @option Backward\r\n * @value backward\r\n * @option Away From Other\r\n * @value away\r\n * @option Towards Other\r\n * @value towards\r\n *\r\n * @param dist\r\n * @text Distance\r\n * @type number\r\n * @decimals 2\r\n * @default 1\r\n * @desc Distance to move in tiles. Or set to the text edge and the character will align to the current tiles edge.\r\n *\r\n * @param other\r\n * @text Other\r\n * @type select\r\n * @default player\r\n * @option Player\r\n * @value player\r\n * @option This\r\n * @value this\r\n * @option Event\r\n * @value event\r\n * @option Boat\r\n * @value boat\r\n * @option Ship\r\n * @value ship\r\n * @option Airship\r\n * @value airship\r\n *\r\n * @param moverEventId\r\n * @text Mover Event Id\r\n * @type text\r\n * @desc Id number or name of event to move. Mover must be set to Event or this will be ignored.\r\n *\r\n * @param otherEventId\r\n * @text Other Event Id\r\n * @type text\r\n * @desc Id number or name of event to move around. Direction must be set to Event or this will be ignored.\r\n */\r\n(() => {\r\n  const pluginName = 'AltimitMovement';\r\n  const DOM_PARSER = new DOMParser();\r\n  const PARAMETERS = PluginManager.parameters(pluginName);\r\n\r\n  // const GAME_PAD_THRESHOLD = 1 / 5;\r\n  // const GAME_PAD_LIMIT = 1 - GAME_PAD_THRESHOLD;\r\n\r\n  /**\r\n   * PLAYER\r\n   */\r\n  const playerColliderList = PARAMETERS['player_collider_list'];\r\n  const PLAYER = {\r\n    CIRCULAR_MOVEMENT: PARAMETERS['player_circular_movement'] != 'false',\r\n    COLLIDER_LIST: playerColliderList\r\n      ? '<collider>' + JSON.parse(playerColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.7' r='0.25' /></collider>\",\r\n  };\r\n\r\n  /**\r\n   * FOLLOWERS\r\n   */\r\n  const followersColliderList = PARAMETERS['followers_collider_list'];\r\n  const FOLLOWERS = {\r\n    DISTANCE: Number(PARAMETERS['followers_distance']),\r\n    CIRCULAR_MOVEMENT: PARAMETERS['followers_circular_movement'] != 'false',\r\n    COLLIDER_LIST: followersColliderList\r\n      ? '<collider>' + JSON.parse(followersColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.7' r='0.25' /></collider>\",\r\n  };\r\n\r\n  /**\r\n   * VEHICLES\r\n   */\r\n  const boatColliderList = PARAMETERS['vehicles_boat_collider_list'];\r\n  const shipColliderList = PARAMETERS['vehicles_ship_collider_list'];\r\n  const airshipColliderList = PARAMETERS['vehicles_airship_collider_list'];\r\n\r\n  const VEHICLES = {\r\n    BOAT_COLLIDER_LIST: boatColliderList\r\n      ? '<collider>' + JSON.parse(boatColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.5' r='0.333' /></collider>\",\r\n    SHIP_COLLIDER_LIST: shipColliderList\r\n      ? '<collider>' + JSON.parse(shipColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.5' r='0.5' /></collider>\",\r\n    AIRSHIP_COLLIDER_LIST: airshipColliderList\r\n      ? '<collider>' + JSON.parse(airshipColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.5' r='0.25' /></collider>\",\r\n  };\r\n\r\n  /**\r\n   * EVENT\r\n   */\r\n  const characterColliderList = PARAMETERS['event_character_collider_list'];\r\n  const titleColliderList = PARAMETERS['event_tile_collider_list'];\r\n  const EVENT = {\r\n    CHARACTER_COLLIDER_LIST: characterColliderList\r\n      ? '<collider>' + JSON.parse(characterColliderList) + '</collider>'\r\n      : \"<collider><circle cx='0.5' cy='0.7' r='0.25' /></collider>\",\r\n    TILE_COLLIDER_LIST: titleColliderList\r\n      ? '<collider>' + JSON.parse(titleColliderList) + '</collider>'\r\n      : \"<collider><rect x='0' y='0' width='1' height='1' /></collider>\",\r\n  };\r\n\r\n  /**\r\n   * PRESETS\r\n   */\r\n  const presets: string = PARAMETERS['presets'];\r\n  const PRESETS: string[] = presets ? JSON.parse(presets) : [];\r\n\r\n  const MOVE_ROUTE = {\r\n    ALIGN_GRID: PARAMETERS['move_route_align_grid'] != 'false',\r\n  };\r\n\r\n  const INPUT_CONFIG = {\r\n    ENABLE_TOUCH_MOUSE:\r\n      PARAMETERS['input_config_enable_touch_mouse'] != 'false',\r\n    GAMEPAD_MODE: parseInt(PARAMETERS['input_config_gamepad_mode']),\r\n    AUTO_BOARD_VEHICLE: PARAMETERS['auto_board_airship'] != 'false',\r\n  };\r\n\r\n  const PLAY_TEST = {\r\n    COLLISION_MESH_CACHING:\r\n      PARAMETERS['play_test_collision_mesh_caching'] != 'false',\r\n  };\r\n\r\n  /**\r\n   * Game_System\r\n   */\r\n\r\n  const Game_System_initialize = Game_System.prototype.initialize;\r\n  Game_System.prototype.initialize = function () {\r\n    Game_System_initialize.call(this);\r\n    this._eventColliders = [];\r\n\r\n    this._staticMoveAlignGrid = MOVE_ROUTE.ALIGN_GRID;\r\n    this._moveAlignGrid = MOVE_ROUTE.ALIGN_GRID;\r\n\r\n    this._staticFollowerDistance = FOLLOWERS.DISTANCE;\r\n    this._followerDistance = FOLLOWERS.DISTANCE;\r\n\r\n    this._staticEnableTouchMouse = INPUT_CONFIG.ENABLE_TOUCH_MOUSE;\r\n    this._enableTouchMouse = INPUT_CONFIG.ENABLE_TOUCH_MOUSE;\r\n  };\r\n\r\n  /**\r\n   * Game_Interpreter\r\n   */\r\n\r\n  const Game_Interpreter_updateWaitMode =\r\n    Game_Interpreter.prototype.updateWaitMode;\r\n  Game_Interpreter.prototype.updateWaitMode = function () {\r\n    if (this._waitMode === 'target') {\r\n      return this._character._moveTarget;\r\n    }\r\n    return Game_Interpreter_updateWaitMode.call(this);\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Game_Interpreter.prototype.altMovementStringArgs = function (args) {\r\n    if (Array.isArray(args)) return args;\r\n    const str = args.split(' ');\r\n    const stringArgs = [] as string[];\r\n    let readingPart = false;\r\n    let part = '';\r\n    for (let ii = 0; ii < str.length; ii++) {\r\n      if (str.charAt(ii) === ' ' && !readingPart) {\r\n        stringArgs.push(part);\r\n        part = '';\r\n      } else {\r\n        if (str.charAt(ii) === '\"') {\r\n          readingPart = !readingPart;\r\n        }\r\n        part += str.charAt(ii);\r\n      }\r\n    }\r\n    stringArgs.push(part);\r\n    return stringArgs;\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementCommandToDirection = function (\r\n    subject,\r\n    command,\r\n  ) {\r\n    const gc = Game_Character;\r\n    switch (command) {\r\n      case gc.ROUTE_MOVE_DOWN:\r\n        return 2;\r\n      case gc.ROUTE_MOVE_LEFT:\r\n        return 4;\r\n      case gc.ROUTE_MOVE_RIGHT:\r\n        return 6;\r\n      case gc.ROUTE_MOVE_UP:\r\n        return 8;\r\n      case gc.ROUTE_MOVE_LOWER_L:\r\n        return 1;\r\n      case gc.ROUTE_MOVE_LOWER_R:\r\n        return 3;\r\n      case gc.ROUTE_MOVE_UPPER_L:\r\n        return 7;\r\n      case gc.ROUTE_MOVE_UPPER_R:\r\n        return 9;\r\n      case gc.ROUTE_MOVE_RANDOM:\r\n        return 1 + Math.randomInt(8);\r\n      case gc.ROUTE_MOVE_FORWARD:\r\n        return subject._direction;\r\n      case gc.ROUTE_MOVE_BACKWARD:\r\n        return subject.reverseDir(subject._direction);\r\n      default:\r\n        return 5;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementCharacterEdgeDxDy = function (\r\n    subject: Game_Character,\r\n    dx,\r\n    dy,\r\n  ) {\r\n    let stepDistance;\r\n    const box = subject.collider().aabbox;\r\n    if (dx && dy) {\r\n      let xd;\r\n      if (dx < 0) {\r\n        const px = subject.x + box.left;\r\n        xd = Math.floor(px) - px;\r\n      } else {\r\n        const px = subject.x + box.right;\r\n        xd = Math.ceil(px) - px;\r\n      }\r\n      let yd;\r\n      if (dy < 0) {\r\n        const py = subject.y + box.top;\r\n        yd = Math.floor(py) - py;\r\n      } else {\r\n        const py = subject.y + box.bottom;\r\n        yd = Math.ceil(py) - py;\r\n      }\r\n\r\n      stepDistance = xd < yd ? xd : yd;\r\n    } else if (dx) {\r\n      if (dx < 0) {\r\n        const px = subject.x + box.left;\r\n        stepDistance = Math.floor(px) - px;\r\n      } else {\r\n        const px = subject.x + box.right;\r\n        stepDistance = Math.ceil(px) - px;\r\n      }\r\n    } else {\r\n      if (dy < 0) {\r\n        const py = subject.y + box.top;\r\n        stepDistance = Math.floor(py) - py;\r\n      } else {\r\n        const py = subject.y + box.bottom;\r\n        stepDistance = Math.ceil(py) - py;\r\n      }\r\n    }\r\n    return stepDistance;\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementProcessMoveCommand = function (\r\n    subject,\r\n    command,\r\n    distance,\r\n    options,\r\n    object,\r\n  ) {\r\n    $gameMap.refreshIfNeeded();\r\n    this._character = subject;\r\n    if (options.wait) {\r\n      this.setWaitMode('target');\r\n    }\r\n    subject._moveTargetSkippable = options.skip;\r\n    subject._moveTarget = true;\r\n\r\n    if (object) {\r\n      let dx = object.x - subject.x;\r\n      let dy = object.y - subject.y;\r\n      const length = Math.sqrt(dx * dx + dy * dy);\r\n      dx /= length;\r\n      dy /= length;\r\n\r\n      let stepDistance;\r\n      if ('edge' == distance) {\r\n        stepDistance = this.altMovementCharacterEdgeDxDy(subject, dx, dy);\r\n      } else {\r\n        stepDistance = Number(distance);\r\n      }\r\n\r\n      if (command == Game_Character.ROUTE_MOVE_AWAY) {\r\n        stepDistance *= -1;\r\n      }\r\n\r\n      subject._moveTargetX = subject.x + dx * stepDistance;\r\n      subject._moveTargetY = subject.y + dy * stepDistance;\r\n    } else {\r\n      const direction = this.altMovementCommandToDirection(subject, command);\r\n      const dx = Direction.isLeft(direction)\r\n        ? -1\r\n        : Direction.isRight(direction)\r\n        ? 1\r\n        : 0;\r\n      const dy = Direction.isUp(direction)\r\n        ? -1\r\n        : Direction.isDown(direction)\r\n        ? 1\r\n        : 0;\r\n\r\n      let stepDistance;\r\n      if ('edge' == distance) {\r\n        stepDistance = this.altMovementCharacterEdgeDxDy(subject, dx, dy);\r\n      } else {\r\n        stepDistance = Number(distance);\r\n      }\r\n\r\n      subject._moveTargetX = subject.x + dx * stepDistance;\r\n      subject._moveTargetY = subject.y + dy * stepDistance;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementMoveCharacter = function (args) {\r\n    args = this.altMovementStringArgs(args);\r\n\r\n    const subject = this.altMovementGetTargetCharacter(args[1]);\r\n    const command = this.altMovementGetMoveCommand(args[2]);\r\n    let options = {\r\n      wait: args[4] == 'wait' || args[5] == 'wait',\r\n      skip:\r\n        args[4] == 'skip' ||\r\n        args[5] == 'skip' ||\r\n        args[4] == 'skippable' ||\r\n        args[5] == 'skippable',\r\n    };\r\n    switch (command) {\r\n      case Game_Character.ROUTE_MOVE_AWAY:\r\n      case Game_Character.ROUTE_MOVE_TOWARD:\r\n        const object = this.altMovementGetTargetCharacter(args[3]);\r\n        options = {\r\n          wait: args[5] == 'wait' || args[6] == 'wait',\r\n          skip:\r\n            args[5] == 'skip' ||\r\n            args[6] == 'skip' ||\r\n            args[5] == 'skippable' ||\r\n            args[6] == 'skippable',\r\n        };\r\n        this.altMovementProcessMoveCommand(\r\n          subject,\r\n          command,\r\n          args[4],\r\n          options,\r\n          object,\r\n        );\r\n        break;\r\n      default:\r\n        this.altMovementProcessMoveCommand(subject, command, args[3], options);\r\n        break;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementCollider = function (args) {\r\n    args = this.altMovementStringArgs(args);\r\n\r\n    switch (args[1]) {\r\n      case 'set':\r\n        this.altMovementColliderSet(args);\r\n        break;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementColliderSet = function (args) {\r\n    const target = this.altMovementGetTargetCharacter(args[2]);\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const presetIndex = Number(args[3]);\r\n    if (isNaN(presetIndex)) {\r\n      target.setCollider(\r\n        Collider.getPreset(args[3].substring(1, args[3].length - 1)),\r\n      );\r\n      target._hasCustomCollider = true;\r\n    } else {\r\n      target.setCollider(Collider.getPreset(presetIndex));\r\n      target._hasCustomCollider = true;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementGetMoveCommand = function (cmdStr) {\r\n    switch (cmdStr) {\r\n      case 'down_left':\r\n      case 'bottom_left':\r\n      case 'lower_left':\r\n      case 'lower_l':\r\n      case 'left_down':\r\n      case 'left_bottom':\r\n      case 'left_lower':\r\n      case 'l_lower':\r\n      case 'south_west':\r\n      case 'west_south':\r\n      case '1':\r\n      case '↙':\r\n        return Game_Character.ROUTE_MOVE_LOWER_L;\r\n      case 'down':\r\n      case 'bottom':\r\n      case 'lower':\r\n      case 'south':\r\n      case '2':\r\n      case '↓':\r\n        return Game_Character.ROUTE_MOVE_DOWN;\r\n      case 'down_right':\r\n      case 'bottom_right':\r\n      case 'lower_right':\r\n      case 'lower_r':\r\n      case 'right_down':\r\n      case 'right_bottom':\r\n      case 'right_lower':\r\n      case 'r_lower':\r\n      case 'south_east':\r\n      case 'east_south':\r\n      case '3':\r\n      case '↘':\r\n        return Game_Character.ROUTE_MOVE_LOWER_R;\r\n      case 'left':\r\n      case 'west':\r\n      case '4':\r\n      case '←':\r\n        return Game_Character.ROUTE_MOVE_LEFT;\r\n      case 'right':\r\n      case 'east':\r\n      case '6':\r\n      case '→':\r\n        return Game_Character.ROUTE_MOVE_RIGHT;\r\n      case 'up_left':\r\n      case 'top_left':\r\n      case 'upper_left':\r\n      case 'upper_l':\r\n      case 'left_up':\r\n      case 'left_top':\r\n      case 'left_upper':\r\n      case 'l_upper':\r\n      case 'north_west':\r\n      case 'west_north':\r\n      case '7':\r\n      case '↖':\r\n        return Game_Character.ROUTE_MOVE_UPPER_L;\r\n      case 'up':\r\n      case 'top':\r\n      case 'upper':\r\n      case 'north':\r\n      case '8':\r\n      case '↑':\r\n        return Game_Character.ROUTE_MOVE_UP;\r\n      case 'up_right':\r\n      case 'top_right':\r\n      case 'upper_right':\r\n      case 'upper_r':\r\n      case 'right_up':\r\n      case 'right_top':\r\n      case 'right_upper':\r\n      case 'r_upper':\r\n      case 'north_east':\r\n      case 'east_north':\r\n      case '9':\r\n      case '↗':\r\n        return Game_Character.ROUTE_MOVE_UPPER_R;\r\n      case 'away':\r\n      case 'away_from':\r\n        return Game_Character.ROUTE_MOVE_AWAY;\r\n      case 'toward':\r\n      case 'towards':\r\n      case 'toward_to':\r\n        return Game_Character.ROUTE_MOVE_TOWARD;\r\n      case 'forward':\r\n      case 'forwards':\r\n        return Game_Character.ROUTE_MOVE_FORWARD;\r\n      case 'backward':\r\n      case 'backwards':\r\n      case 'back':\r\n        return Game_Character.ROUTE_MOVE_BACKWARD;\r\n      case 'random':\r\n      case 'randomly':\r\n        return Game_Character.ROUTE_MOVE_RANDOM;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  Game_Interpreter.prototype.altMovementGetTargetCharacter = function (target) {\r\n    if (target.startsWith('\"') && target.endsWith('\"')) {\r\n      // Event name\r\n      const eventName = target.substring(1, target.length - 1);\r\n      for (let ii = 0; ii < $dataMap.events.length; ii++) {\r\n        if ($dataMap.events?.[ii]?.name === eventName) {\r\n          return $gameMap.event($dataMap.events[ii]?.id);\r\n        }\r\n      }\r\n    } else {\r\n      // System name\r\n      switch (target) {\r\n        case 'this':\r\n          const eventId = this._eventId;\r\n          // This Event ID #\r\n          return $gameMap.event(eventId);\r\n        case 'player':\r\n          return $gamePlayer;\r\n        case 'boat':\r\n          return $gameMap.boat();\r\n        case 'ship':\r\n          return $gameMap.ship();\r\n        case 'airship':\r\n          return $gameMap.airship();\r\n        default:\r\n          if (target.startsWith('follower')) {\r\n            const index = Number(target.substring(8));\r\n            // Follower index\r\n            return $gamePlayer.followers().follower(index);\r\n          } else {\r\n            const eventId = Number(target);\r\n            // Event ID #\r\n            return $gameMap.event(eventId);\r\n          }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Game_CharacterBase\r\n   */\r\n\r\n  Game_CharacterBase.prototype.continueProcessMoveCommand = function () {\r\n    if (!this._moveTarget) return;\r\n    let dx = $gameMap.directionX(this._x, this._moveTargetX);\r\n    let dy = $gameMap.directionY(this._y, this._moveTargetY);\r\n    const length = Math.sqrt(dx * dx + dy * dy);\r\n    if (length <= this.stepDistance) {\r\n      this._moveTarget = false;\r\n      this._moveTargetSkippable = false;\r\n      this.setDirectionFix(this._wasDirectionFixed);\r\n      this._x = $gameMap.roundX(this._moveTargetX);\r\n      this._y = $gameMap.roundY(this._moveTargetY);\r\n    } else {\r\n      dx /= length;\r\n      dy /= length;\r\n      this.moveVector(dx * this.stepDistance, dy * this.stepDistance);\r\n      if (!this.isMovementSucceeded()) {\r\n        if (\r\n          this._moveTargetSkippable ||\r\n          (!!this._moveRoute && this._moveRoute.skippable)\r\n        ) {\r\n          this._moveTarget = false;\r\n          this._moveTargetSkippable = false;\r\n          this.setDirectionFix(this._wasDirectionFixed);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  Game_CharacterBase.prototype.isOnLadder = function () {\r\n    const aabbox = this.collider().aabbox;\r\n    if (aabbox.left >= 0 && aabbox.right <= 1) {\r\n      // To use ladder the bounding box must fit on a tile\r\n      return false;\r\n    }\r\n    // If middle is on ladder\r\n    if (\r\n      !$gameMap.isLadder(\r\n        $gameMap.roundX(this._x + (aabbox.left + aabbox.right) / 2),\r\n        $gameMap.roundY(this._y + (aabbox.top + aabbox.bottom) / 2),\r\n      )\r\n    ) {\r\n      // If bottom middle is on ladder\r\n      if (\r\n        $gameMap.isLadder(\r\n          $gameMap.roundX(this._x + (aabbox.left + aabbox.right) / 2),\r\n          $gameMap.roundY(this._y + aabbox.bottom),\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.moveStraight = function (d) {\r\n    let vy = Direction.isUp(d) ? -1 : Direction.isDown(d) ? 1 : 0;\r\n    let vx = Direction.isLeft(d) ? -1 : Direction.isRight(d) ? 1 : 0;\r\n    if (this._circularMovement) {\r\n      const length = Math.sqrt(vx * vx + vy * vy);\r\n      vx /= length;\r\n      vy /= length;\r\n    }\r\n    this.moveVector(vx * this.stepDistance, vy * this.stepDistance);\r\n  };\r\n\r\n  Game_CharacterBase.prototype.moveDiagonally = function (horz, vert) {\r\n    let vy = Direction.isUp(vert) ? -1 : Direction.isDown(vert) ? 1 : 0;\r\n    let vx = Direction.isLeft(horz) ? -1 : Direction.isRight(horz) ? 1 : 0;\r\n    if (this._circularMovement) {\r\n      const length = Math.sqrt(vx * vx + vy * vy);\r\n      vx /= length;\r\n      vy /= length;\r\n    }\r\n    this.moveVector(vx * this.stepDistance, vy * this.stepDistance);\r\n  };\r\n\r\n  const Game_CharacterBase_isMoving = Game_CharacterBase.prototype.isMoving;\r\n  Game_CharacterBase.prototype.isMoving = function () {\r\n    return Game_CharacterBase_isMoving.call(this) || this._isMoving;\r\n  };\r\n\r\n  const Game_CharacterBase_updateAnimation =\r\n    Game_CharacterBase.prototype.updateAnimation;\r\n  Game_CharacterBase.prototype.updateAnimation = function () {\r\n    Game_CharacterBase_updateAnimation.call(this);\r\n    this._wasMoving = this._isMoving;\r\n    this._isMoving = this._x !== this._realX || this._y !== this._realY;\r\n    if (!this._isMoving) {\r\n      this.refreshBushDepth();\r\n    }\r\n  };\r\n\r\n  Game_CharacterBase.prototype.isOnBush = function () {\r\n    const aabbox = this.collider().aabbox;\r\n    // If middle is in bush\r\n    if (\r\n      $gameMap.isBush(\r\n        $gameMap.roundX(this._x + (aabbox.left + aabbox.right) / 2),\r\n        $gameMap.roundY(this._y + (aabbox.top + aabbox.bottom) / 2),\r\n      )\r\n    ) {\r\n      // If bottom middle is in bush\r\n      if (\r\n        $gameMap.isBush(\r\n          $gameMap.roundX(this._x + (aabbox.left + aabbox.right) / 2),\r\n          $gameMap.roundY(this._y + aabbox.bottom),\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.canPass = function (x, y, d) {\r\n    if (this.isThrough() || this.isDebugThrough()) {\r\n      return true;\r\n    }\r\n\r\n    const x2 = $gameMap.roundXWithDirection(x, d);\r\n    const y2 = $gameMap.roundYWithDirection(y, d);\r\n    if (!$gameMap.canWalk(this, x2, y2)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.canPassDiagonally = function (x, y, horz, vert) {\r\n    if (this.isThrough() || this.isDebugThrough()) {\r\n      return true;\r\n    }\r\n\r\n    const x2 = $gameMap.roundXWithDirection(x, horz);\r\n    const y2 = $gameMap.roundYWithDirection(y, vert);\r\n    if (!$gameMap.canWalk(this, x2, y2)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const Game_CharacterBase_setDirection =\r\n    Game_CharacterBase.prototype.setDirection;\r\n  Game_CharacterBase.prototype.setDirection = function (d) {\r\n    Game_CharacterBase_setDirection.call(this, d);\r\n    this._direction8 = this._direction;\r\n  };\r\n\r\n  const Game_CharacterBase_screenX = Game_CharacterBase.prototype.screenX;\r\n  Game_CharacterBase.prototype.screenX = function () {\r\n    const round = Math.round;\r\n    Math.round = Math.floor;\r\n    const val = Game_CharacterBase_screenX.call(this);\r\n    Math.round = round;\r\n    return val;\r\n  };\r\n\r\n  const Game_CharacterBase_screenY = Game_CharacterBase.prototype.screenY;\r\n  Game_CharacterBase.prototype.screenY = function () {\r\n    const round = Math.round;\r\n    Math.round = Math.floor;\r\n    const val = Game_CharacterBase_screenY.call(this);\r\n    Math.round = round;\r\n    return val;\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Object.defineProperties(Game_CharacterBase.prototype, {\r\n    stepDistance: {\r\n      get: function () {\r\n        return this.distancePerFrame();\r\n      },\r\n      configurable: true,\r\n    },\r\n  });\r\n\r\n  Game_CharacterBase.prototype.collidableWith = function (character) {\r\n    if (!character) return false;\r\n    if (character === this) return false;\r\n    if (!this.isNormalPriority() || !character.isNormalPriority()) return false;\r\n    if (this.isThrough()) return false;\r\n    if (character instanceof Game_Follower && !character.isVisible())\r\n      return false;\r\n    if (character instanceof Game_Followers && !character.isVisible())\r\n      return false;\r\n    if (this instanceof Game_Player) {\r\n      if (this.vehicle() === character) return false;\r\n      if (character instanceof Game_Follower) {\r\n        if (this.followers().contains(character)) return false;\r\n      }\r\n    }\r\n    if (!(character instanceof Game_Follower)) {\r\n      if (character.isThrough()) return false;\r\n    }\r\n    if (this instanceof Game_Follower) {\r\n      if (character instanceof Game_Follower) return false;\r\n      if (character instanceof Game_Player) return false;\r\n    }\r\n    if (this instanceof Game_Vehicle) {\r\n      if (character instanceof Game_Player) return false;\r\n      if (character instanceof Game_Follower) return false;\r\n    }\r\n    if (character instanceof Game_Vehicle) {\r\n      if (character._mapId !== $gameMap.mapId()) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  function getLoopMapCorrection(vector: Vector, loopMap: number) {\r\n    if (loopMap == 1) {\r\n      vector.x += $gameMap.width();\r\n    } else if (loopMap == 2) {\r\n      vector.x -= $gameMap.width();\r\n    } else if (loopMap == 3) {\r\n      vector.y += $gameMap.height();\r\n    } else if (loopMap == 4) {\r\n      vector.y -= $gameMap.height();\r\n    } else if (loopMap == 5) {\r\n      vector.x += $gameMap.width();\r\n      vector.y += $gameMap.height();\r\n    } else if (loopMap == 6) {\r\n      vector.x -= $gameMap.width();\r\n      vector.y += $gameMap.height();\r\n    } else if (loopMap == 7) {\r\n      vector.x += $gameMap.width();\r\n      vector.y -= $gameMap.height();\r\n    } else if (loopMap == 8) {\r\n      vector.x -= $gameMap.width();\r\n      vector.y -= $gameMap.height();\r\n    }\r\n    return vector;\r\n  }\r\n\r\n  Game_CharacterBase.prototype.moveVectorCharacters = function (\r\n    characters,\r\n    move,\r\n  ) {\r\n    characters.forEach((character) => {\r\n      const characterVector = { x: character._x, y: character._y };\r\n      const moveVector = getLoopMapCorrection(\r\n        characterVector,\r\n        character.loopMap,\r\n      );\r\n      const characterX = moveVector.x;\r\n      const characterY = moveVector.y;\r\n\r\n      move = Collider.move(\r\n        this._x,\r\n        this._y,\r\n        this.collider(),\r\n        characterX,\r\n        characterY,\r\n        character.collider(),\r\n        move,\r\n      );\r\n      if (move.x === 0 && move.y === 0) {\r\n        return move;\r\n      }\r\n    });\r\n    return move;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.moveVectorMap = function (\r\n    bboxTests: Polygon[],\r\n    move,\r\n    vx,\r\n    vy,\r\n  ) {\r\n    for (let ii = 0; ii < bboxTests.length; ii++) {\r\n      const moveVector = getLoopMapCorrection(\r\n        { x: 0, y: 0 },\r\n        bboxTests[ii].type,\r\n      );\r\n      const offsetX = moveVector.x;\r\n      const offsetY = moveVector.y;\r\n\r\n      const mapColliders = Collider.polygonsWithinColliderList(\r\n        bboxTests[ii].x + vx,\r\n        bboxTests[ii].y + vy,\r\n        bboxTests[ii].aabbox,\r\n        offsetX,\r\n        offsetY,\r\n        $gameMap.collisionMesh(this._collisionType),\r\n      );\r\n      if (mapColliders.length > 0) {\r\n        if (move.x !== 0) {\r\n          let sigMove = { x: move.x, y: 0 };\r\n          mapColliders.forEach((mapCollider) => {\r\n            sigMove = Collider.move(\r\n              this._x,\r\n              this._y,\r\n              this.collider(),\r\n              offsetX,\r\n              offsetY,\r\n              mapCollider,\r\n              sigMove,\r\n            );\r\n          });\r\n          move.x = sigMove.x;\r\n        }\r\n        mapColliders.forEach((mapCollider) => {\r\n          move = Collider.move(\r\n            this._x,\r\n            this._y,\r\n            this.collider(),\r\n            offsetX,\r\n            offsetY,\r\n            mapCollider,\r\n            move,\r\n          );\r\n        });\r\n      }\r\n    }\r\n    return move;\r\n  };\r\n\r\n  function getMapMove(\r\n    x: number,\r\n    y: number,\r\n    aabbox: Aabbox,\r\n    vector: Vector,\r\n  ): Vector {\r\n    const move = { x: 0, y: 0 };\r\n\r\n    if (!$gameMap.isLoopHorizontal() && x + vector.x + aabbox.left < 0) {\r\n      move.x = 0 - (x + aabbox.left);\r\n    } else if (\r\n      !$gameMap.isLoopHorizontal() &&\r\n      x + vector.x + aabbox.right > $gameMap.width()\r\n    ) {\r\n      move.x = $gameMap.width() - (x + aabbox.right);\r\n    } else {\r\n      move.x = vector.x;\r\n    }\r\n\r\n    if (!$gameMap.isLoopVertical() && y + vector.y + aabbox.top < 0) {\r\n      move.y = 0 - (y + aabbox.top);\r\n    } else if (\r\n      !$gameMap.isLoopVertical() &&\r\n      y + vector.y + aabbox.bottom > $gameMap.height()\r\n    ) {\r\n      move.y = $gameMap.height() - (y + aabbox.bottom);\r\n    } else {\r\n      move.y = vector.y;\r\n    }\r\n    return move;\r\n  }\r\n\r\n  Game_CharacterBase.prototype.testMove = function (vx, vy) {\r\n    let characterCollided = false;\r\n    if (this.isThrough() || this.isDebugThrough()) {\r\n      return {\r\n        characterCollided,\r\n        move: getMapMove(this._x, this._y, this.collider().aabbox, {\r\n          x: vx,\r\n          y: vy,\r\n        }),\r\n      };\r\n    }\r\n    const bboxTests = $gameMap.getAABBoxTests(this, vx, vy);\r\n    // Gather any solid characters within the movement bounding box\r\n    const characters = $gameMap.characters(false).filter((character) => {\r\n      if (this.collidableWith(character)) {\r\n        for (let ii = 0; ii < bboxTests.length; ii++) {\r\n          if (\r\n            Collider.aabboxCheck(\r\n              bboxTests[ii].x,\r\n              bboxTests[ii].y,\r\n              bboxTests[ii].aabbox,\r\n              character._x,\r\n              character._y,\r\n              character.collider().aabbox,\r\n              vx,\r\n              vy,\r\n            )\r\n          ) {\r\n            character.loopMap = bboxTests[ii].type;\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    const move = { x: vx, y: vy };\r\n\r\n    // Test collision with characters\r\n    this.moveVectorCharacters(characters, move);\r\n\r\n    // Test collision with map\r\n    this.moveVectorMap(bboxTests, move, vx, vy);\r\n    if (move.x !== vx || move.y !== vy) {\r\n      // Collided with character, disable direction change\r\n      characterCollided = true;\r\n    }\r\n\r\n    // Resolve too much precision\r\n    move.x = Math.round(move.x * Collider.PRECISION) / Collider.PRECISION;\r\n    move.y = Math.round(move.y * Collider.PRECISION) / Collider.PRECISION;\r\n\r\n    // Special ladder behaviour\r\n    if (\r\n      this.isOnLadder() &&\r\n      (this instanceof Game_Player ? !this.isInAirship() : true)\r\n    ) {\r\n      const tileX = Math.round(this._x);\r\n      if (!$gameMap.isPassable(tileX, this._y + move.y, Direction.LEFT)) {\r\n        if (!$gameMap.isPassable(tileX, this._y + move.y, Direction.RIGHT)) {\r\n          move.x = tileX - this._x;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      move,\r\n      characterCollided,\r\n    };\r\n  };\r\n\r\n  Game_CharacterBase.prototype.moveVector = function (vx, vy) {\r\n    const { move, characterCollided } = this.testMove(vx, vy);\r\n\r\n    const length = Math.sqrt(move.x * move.x + move.y * move.y);\r\n    if (length > Collider.I_PRECISION) {\r\n      this._x = $gameMap.roundX(this._x + move.x);\r\n      this._y = $gameMap.roundY(this._y + move.y);\r\n\r\n      this._realX = this._x - move.x;\r\n      this._realY = this._y - move.y;\r\n      this.setMovementSuccess(true);\r\n      if (characterCollided) {\r\n        this.setDirectionVector(vx, vy);\r\n      } else {\r\n        this.setDirectionVector(move.x, move.y);\r\n      }\r\n      this.increaseSteps();\r\n      this._isMoving = true;\r\n\r\n      this.checkEventTriggerTouchFrontVector(move.x, move.y);\r\n    } else {\r\n      this.setMovementSuccess(false);\r\n      this.setDirectionVector(vx, vy);\r\n      this._isMoving = false;\r\n\r\n      this.checkEventTriggerTouchFrontVector(vx, vy);\r\n    }\r\n  };\r\n\r\n  function direction8FromDirection(direction: number) {\r\n    const direction8 = Math.round((direction + 1) * 4) % 8; // 8 directions\r\n    switch (direction8) {\r\n      case 0:\r\n        return Direction.LEFT;\r\n      case 1:\r\n        return Direction.UP_LEFT;\r\n      case 2:\r\n        return Direction.UP;\r\n      case 3:\r\n        return Direction.UP_RIGHT;\r\n      case 4:\r\n        return Direction.RIGHT;\r\n      case 5:\r\n        return Direction.DOWN_RIGHT;\r\n      case 6:\r\n        return Direction.DOWN;\r\n      case 7:\r\n        return Direction.DOWN_LEFT;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  function directionFromAngle(direction: number) {\r\n    if (direction >= -0.2 && direction < 0.2) {\r\n      // East\r\n      return Direction.RIGHT;\r\n    } else if (direction >= 0.3 && direction < 0.7) {\r\n      // South\r\n      return Direction.DOWN;\r\n    } else if (direction >= -0.7 && direction < -0.3) {\r\n      // North\r\n      return Direction.UP;\r\n    } else if (direction >= -1.2 && direction < -0.8) {\r\n      // West\r\n      return Direction.LEFT;\r\n    } else if (direction >= 0.8 && direction < 1.2) {\r\n      // West\r\n      return Direction.LEFT;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  function directionFromDirectionVector(\r\n    direction: rm.types.Direction,\r\n    vector: Vector,\r\n  ) {\r\n    const dx = vector.x > 0 ? Direction.RIGHT : vector.x ? Direction.LEFT : 0;\r\n    const dy = vector.y > 0 ? Direction.DOWN : vector.y ? Direction.UP : 0;\r\n    if (dx && dy) {\r\n      if (direction === Game_CharacterBase.prototype.reverseDir(dx)) {\r\n        return dx;\r\n      } else if (direction === Game_CharacterBase.prototype.reverseDir(dy)) {\r\n        return dy;\r\n      } else {\r\n      }\r\n    } else {\r\n      return dx || dy;\r\n    }\r\n  }\r\n\r\n  Game_CharacterBase.prototype.setDirectionVector = function (vx, vy) {\r\n    if (this.isDirectionFixed()) {\r\n      return;\r\n    }\r\n    const direction = Math.atan2(vy, vx) / Math.PI;\r\n    const direct = directionFromAngle(direction);\r\n    if (direct) {\r\n      this.setDirection(direct);\r\n    } else {\r\n      const direction2 = directionFromDirectionVector(this._direction, {\r\n        x: vx,\r\n        y: vy,\r\n      });\r\n      if (!direction2) this.resetStopCount();\r\n      if (direction2) this.setDirection(direction2);\r\n    }\r\n    this._direction8 = direction8FromDirection(direction);\r\n  };\r\n\r\n  Game_CharacterBase.prototype.checkEventTriggerTouchFrontVector = function (\r\n    vx,\r\n    vy,\r\n  ) {\r\n    this.checkEventTriggerTouch(this._x + vx, this._y + vy);\r\n  };\r\n\r\n  Game_CharacterBase.prototype.regionId = function () {\r\n    if (this._collider !== undefined) {\r\n      return $gameMap.regionId(\r\n        this._x + (this._collider as Polygon)?.x || 0,\r\n        this._y + (this._collider as Polygon)?.y || 0,\r\n      );\r\n    }\r\n    return $gameMap.regionId(this._x, this._y);\r\n  };\r\n\r\n  Game_CharacterBase.prototype.align = function () {\r\n    this._x = this._x | 0;\r\n    this._y = this._y | 0;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.collider = function () {\r\n    return this._collider || Collider.sharedTile();\r\n  };\r\n\r\n  Game_CharacterBase.prototype.setCollider = function (collider) {\r\n    this._collider = collider;\r\n  };\r\n\r\n  Game_CharacterBase.prototype.direction8 = function () {\r\n    return this._direction8;\r\n  };\r\n\r\n  /**\r\n   * Game_Character\r\n   */\r\n\r\n  Game_Character.prototype.updateRoutineMove = function () {\r\n    if (this._moveTarget) {\r\n      this.continueProcessMoveCommand();\r\n      const moveRoute = this._moveRoute;\r\n      if (!moveRoute.skippable || this._wasMoving) {\r\n        return;\r\n      }\r\n    }\r\n    if (this._waitCount > 0) {\r\n      this._waitCount--;\r\n    } else {\r\n      this.setMovementSuccess(true);\r\n      const command = this._moveRoute.list[this._moveRouteIndex];\r\n      if (command) {\r\n        this.processMoveCommand(command);\r\n        this.continueProcessMoveCommand();\r\n        this.advanceMoveRouteIndex();\r\n      }\r\n    }\r\n  };\r\n\r\n  Game_Character.prototype.moveRandom = function () {\r\n    if (this._moveTarget) {\r\n      return;\r\n    }\r\n\r\n    const d = 1 + Math.randomInt(8);\r\n    const vx = Direction.isLeft(d) ? -1 : Direction.isRight(d) ? 1 : 0;\r\n    const vy = Direction.isUp(d) ? -1 : Direction.isDown(d) ? 1 : 0;\r\n\r\n    this.setDirectionVector(vx, vy);\r\n    this._moveTarget = true;\r\n    this._moveTargetSkippable = true;\r\n    this._moveTargetX = Math.round(this.x + vx);\r\n    this._moveTargetY = Math.round(this.y + vy);\r\n  };\r\n\r\n  Game_Character.prototype.moveTowardCharacter = function (character) {\r\n    let vx = character.x - this.x;\r\n    let vy = character.y - this.y;\r\n    const length = Math.sqrt(vx * vx + vy * vy);\r\n    if (length > this.stepDistance) {\r\n      this.setDirectionVector(vx, vy);\r\n      vx /= length;\r\n      vy /= length;\r\n      this._moveTarget = true;\r\n      this._moveTargetSkippable = true;\r\n      this._moveTargetX = Math.round(this.x + vx);\r\n      this._moveTargetY = Math.round(this.y + vy);\r\n    }\r\n  };\r\n\r\n  Game_Character.prototype.moveAwayFromCharacter = function (character) {\r\n    let vx = character.x - this.x;\r\n    let vy = character.y - this.y;\r\n    const length = Math.sqrt(vx * vx + vy * vy);\r\n    this.setDirectionVector(-vx, -vy);\r\n    vx /= length;\r\n    vy /= length;\r\n    this._moveTarget = true;\r\n    this._moveTargetSkippable = true;\r\n    this._moveTargetX = Math.round(this.x - vx);\r\n    this._moveTargetY = Math.round(this.y - vy);\r\n  };\r\n\r\n  const Game_Character_processMoveCommand =\r\n    Game_Character.prototype.processMoveCommand;\r\n  Game_Character.prototype.processMoveCommand = function (command) {\r\n    const gc = Game_Character;\r\n    switch (command.code) {\r\n      case gc.ROUTE_MOVE_DOWN:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x;\r\n        this._moveTargetY = this._y + 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_LEFT:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x - 1;\r\n        this._moveTargetY = this._y;\r\n        break;\r\n      case gc.ROUTE_MOVE_RIGHT:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x + 1;\r\n        this._moveTargetY = this._y;\r\n        break;\r\n      case gc.ROUTE_MOVE_UP:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x;\r\n        this._moveTargetY = this._y - 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_LOWER_L:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x - 1;\r\n        this._moveTargetY = this._y + 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_LOWER_R:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x + 1;\r\n        this._moveTargetY = this._y + 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_UPPER_L:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x - 1;\r\n        this._moveTargetY = this._y - 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_UPPER_R:\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x + 1;\r\n        this._moveTargetY = this._y - 1;\r\n        break;\r\n      case gc.ROUTE_MOVE_FORWARD:\r\n        this._wasDirectionFixed = this.isDirectionFixed();\r\n        this.setDirectionFix(true);\r\n        let vx = Direction.isLeft(this._direction)\r\n          ? -1\r\n          : Direction.isRight(this._direction)\r\n          ? 1\r\n          : 0;\r\n        let vy = Direction.isUp(this._direction)\r\n          ? -1\r\n          : Direction.isDown(this._direction)\r\n          ? 1\r\n          : 0;\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x + vx;\r\n        this._moveTargetY = this._y + vy;\r\n        break;\r\n      case gc.ROUTE_MOVE_BACKWARD:\r\n        this._wasDirectionFixed = this.isDirectionFixed();\r\n        this.setDirectionFix(true);\r\n        vx = Direction.isLeft(this._direction)\r\n          ? -1\r\n          : Direction.isRight(this._direction)\r\n          ? 1\r\n          : 0;\r\n        vy = Direction.isUp(this._direction)\r\n          ? -1\r\n          : Direction.isDown(this._direction)\r\n          ? 1\r\n          : 0;\r\n        this._moveTarget = true;\r\n        this._moveTargetX = this._x - vx;\r\n        this._moveTargetY = this._y - vy;\r\n        break;\r\n      default:\r\n        Game_Character_processMoveCommand.call(this, command);\r\n        break;\r\n    }\r\n\r\n    if ($gameSystem._staticMoveAlignGrid !== MOVE_ROUTE.ALIGN_GRID) {\r\n      $gameSystem._staticMoveAlignGrid = MOVE_ROUTE.ALIGN_GRID;\r\n      $gameSystem._moveAlignGrid = MOVE_ROUTE.ALIGN_GRID;\r\n    }\r\n\r\n    if (this._moveTarget && $gameSystem._moveAlignGrid) {\r\n      this._moveTargetX = Math.round(this._moveTargetX);\r\n      this._moveTargetY = Math.round(this._moveTargetY);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Game_Player\r\n   */\r\n\r\n  const Game_Player_initMembers = Game_Player.prototype.initMembers;\r\n  Game_Player.prototype.initMembers = function () {\r\n    Game_Player_initMembers.call(this);\r\n    this._collider = Collider.createFromXML(PLAYER.COLLIDER_LIST);\r\n    this._circularMovement = PLAYER.CIRCULAR_MOVEMENT;\r\n  };\r\n\r\n  Game_Player.prototype.checkEventTriggerTouch =\r\n    Game_CharacterBase.prototype.checkEventTriggerTouch;\r\n\r\n  const Game_Player_encounterProgressValue =\r\n    Game_Player.prototype.encounterProgressValue;\r\n  Game_Player.prototype.encounterProgressValue = function () {\r\n    return this.stepDistance * Game_Player_encounterProgressValue.call(this);\r\n  };\r\n\r\n  const Game_Player_clearTransferInfo = Game_Player.prototype.clearTransferInfo;\r\n  Game_Player.prototype.clearTransferInfo = function () {\r\n    Game_Player_clearTransferInfo.call(this);\r\n    this._moveTarget = false;\r\n    this._moveTargetSkippable = false;\r\n    this._touchTarget = null;\r\n  };\r\n\r\n  const TouchInput_SetupEventHandlers = TouchInput._setupEventHandlers;\r\n  TouchInput._setupEventHandlers = function () {\r\n    document.addEventListener('dblclick', () => {\r\n      $gameTemp._doubleClicked = true;\r\n    });\r\n    TouchInput_SetupEventHandlers.call(this);\r\n  };\r\n\r\n  const Game_Player_updateDashing = Game_Player.prototype.updateDashing;\r\n  Game_Player.prototype.updateDashing = function () {\r\n    if ($gameTemp._doubleClicked) {\r\n      this._dashing = true;\r\n      return;\r\n    }\r\n    Game_Player_updateDashing.call(this);\r\n  };\r\n\r\n  Game_Player.prototype.update = function (sceneActive) {\r\n    const lastScrolledX = this.scrolledX();\r\n    const lastScrolledY = this.scrolledY();\r\n    const wasMoving = this._wasMoving;\r\n    this.updateDashing();\r\n    if (sceneActive) {\r\n      this.moveByInput();\r\n    }\r\n    Game_Character.prototype.update.call(this);\r\n    this.updateScroll(lastScrolledX, lastScrolledY);\r\n    this.updateVehicle();\r\n    if (!this._isMoving) {\r\n      this.updateNonmoving(wasMoving, sceneActive);\r\n    }\r\n    this._followers.update();\r\n  };\r\n\r\n  Game_Player.prototype.getInputDirection = function () {\r\n    return Input.dir8;\r\n  };\r\n\r\n  function getTouchedCharacter() {\r\n    const touchedCharacters = $gameMap\r\n      .getCharactersUnderPoint(\r\n        $gameTemp.destinationX(),\r\n        $gameTemp.destinationY(),\r\n      )\r\n      .filter(function (character) {\r\n        // Filter out events that player cannot reach\r\n        return !(\r\n          character instanceof Game_Event &&\r\n          character._eventId &&\r\n          !character.isNormalPriority()\r\n        );\r\n      });\r\n\r\n    // Check if we're touching an interactable\r\n    if (touchedCharacters.contains($gamePlayer)) {\r\n      // Only touched player, action time\r\n      return $gamePlayer;\r\n    }\r\n    if (\r\n      touchedCharacters.contains($gameMap.airship()) &&\r\n      $gameMap.airship()._mapId === $gameMap.mapId()\r\n    ) {\r\n      return $gameMap.airship();\r\n    }\r\n    if (\r\n      touchedCharacters.contains($gameMap.ship()) &&\r\n      $gameMap.ship()._mapId === $gameMap.mapId()\r\n    ) {\r\n      return $gameMap.ship();\r\n    }\r\n    if (\r\n      touchedCharacters.contains($gameMap.boat()) &&\r\n      $gameMap.boat()._mapId === $gameMap.mapId()\r\n    ) {\r\n      return $gameMap.boat();\r\n    }\r\n\r\n    // Only care about events now\r\n    return touchedCharacters.find(function (character) {\r\n      return (\r\n        character instanceof Game_Event &&\r\n        !!character._eventId &&\r\n        character._trigger === 0\r\n      );\r\n    });\r\n  }\r\n\r\n  Game_Player.prototype.moveByInputTouch = function () {\r\n    if ($gameSystem._enableTouchMouse && $gameTemp.isDestinationValid()) {\r\n      const characterTarget = getTouchedCharacter();\r\n      if (characterTarget === $gamePlayer) {\r\n        if (this.isInVehicle()) {\r\n          this.getOffVehicle();\r\n          return;\r\n        }\r\n        if (!this.getOnVehicle()) {\r\n          this.checkEventTriggerHere([0]);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Move toward destination\r\n      this._touchTarget =\r\n        characterTarget ??\r\n        new Point(\r\n          $gameTemp.destinationX() - 0.5,\r\n          $gameTemp.destinationY() - 0.5,\r\n        );\r\n      $gameTemp.clearDestination();\r\n    }\r\n\r\n    if (!this._touchTarget) {\r\n      $gameTemp._doubleClicked = false;\r\n      return;\r\n    }\r\n    let dx = $gameMap.directionX(this._x, this._touchTarget.x);\r\n    let dy = $gameMap.directionY(this._y, this._touchTarget.y);\r\n\r\n    const length = Math.sqrt(dx * dx + dy * dy);\r\n    if (length <= this.stepDistance) {\r\n      if (\r\n        this._touchTarget instanceof Game_Vehicle &&\r\n        INPUT_CONFIG.AUTO_BOARD_VEHICLE\r\n      ) {\r\n        this.getOnVehicle();\r\n      }\r\n      this._touchTarget = null;\r\n    }\r\n    dx /= length;\r\n    dy /= length;\r\n    if (this._circularMovement) {\r\n      this.moveVector(dx * this.stepDistance, dy * this.stepDistance);\r\n    } else {\r\n      const vector = Direction.normalizeSquare(dx, dy);\r\n      this.moveVector(\r\n        vector.x * this.stepDistance,\r\n        vector.y * this.stepDistance,\r\n      );\r\n    }\r\n    if (Math.abs(dx) > Math.abs(dy)) {\r\n      this.setDirectionVector(dx, 0);\r\n    } else {\r\n      this.setDirectionVector(0, dy);\r\n    }\r\n    if (this.isOnLadder()) {\r\n      this.setDirection(8);\r\n    }\r\n\r\n    // Can't move any more, so stop walking\r\n    if (this.isMovementSucceeded()) {\r\n      return;\r\n    }\r\n    // if it's a character\r\n    if (this._touchTarget instanceof Game_CharacterBase) {\r\n      const collider = this._touchTarget.collider();\r\n      // Touching a character, check if we've reached it\r\n      const rx = dx * this.stepDistance;\r\n      const ry = dy * this.stepDistance;\r\n      if (\r\n        Collider.intersect(\r\n          this._touchTarget.x,\r\n          this._touchTarget.y,\r\n          collider,\r\n          this._x + rx,\r\n          this._y + ry,\r\n          this.collider(),\r\n        )\r\n      ) {\r\n        let vehicle;\r\n        if (this._touchTarget instanceof Game_Event) {\r\n          this._touchTarget.start();\r\n          this._touchTarget = null;\r\n          return;\r\n        } else if (this._touchTarget === $gameMap.airship()) {\r\n          vehicle = $gameMap.airship();\r\n          this._vehicleType = 'airship';\r\n          this._collisionType = CollisionMesh.AIRSHIP;\r\n        } else if (this._touchTarget === $gameMap.ship()) {\r\n          vehicle = $gameMap.ship();\r\n          this._vehicleType = 'ship';\r\n          this._collisionType = CollisionMesh.SHIP;\r\n        } else if (this._touchTarget === $gameMap.boat()) {\r\n          vehicle = $gameMap.boat();\r\n          this._vehicleType = 'boat';\r\n          this._collisionType = CollisionMesh.BOAT;\r\n        }\r\n\r\n        if (vehicle) {\r\n          this._vehicleGettingOn = true;\r\n          vehicle._passengerCollider = this.collider();\r\n          this._collider = vehicle.collider();\r\n\r\n          const dx = $gameMap.directionX(this._x, vehicle._x);\r\n          const dy = $gameMap.directionY(this._y, vehicle._y);\r\n\r\n          const wasThrough = this.isThrough();\r\n          this.setThrough(true);\r\n          this.moveVector(dx, dy);\r\n          this.setThrough(wasThrough);\r\n          this.gatherFollowers();\r\n        }\r\n      } else if (!!this._touchTarget) {\r\n        // Check if our target can only be reached by action\r\n        if (!this.getOnVehicle()) {\r\n          this.checkEventTriggerThere([0]);\r\n        }\r\n      }\r\n    }\r\n    // path is block\r\n    this._touchTarget = null;\r\n  };\r\n\r\n  Game_Player.prototype.moveByInput = function () {\r\n    if (\r\n      $gameSystem._staticEnableTouchMouse != INPUT_CONFIG.ENABLE_TOUCH_MOUSE\r\n    ) {\r\n      $gameSystem._staticEnableTouchMouse = INPUT_CONFIG.ENABLE_TOUCH_MOUSE;\r\n      $gameSystem._enableTouchMouse = INPUT_CONFIG.ENABLE_TOUCH_MOUSE;\r\n    }\r\n    if (this.isMoving() || !this.canMove()) return;\r\n    if (this._moveTarget) {\r\n      this._touchTarget = null;\r\n    }\r\n\r\n    // this.moveByInputGamePad();\r\n    const direction = this.getInputDirection();\r\n    if (direction > 0) {\r\n      // Regular movement\r\n      this.executeMove(direction);\r\n      this._touchTarget = null;\r\n    } else {\r\n      // Touch movement\r\n      this.moveByInputTouch();\r\n    }\r\n  };\r\n\r\n  Game_Player.prototype.checkEventTriggerHere = function (triggers) {\r\n    if (!this.canStartLocalEvents()) return;\r\n    const collider = this.collider();\r\n    const bboxTests = $gameMap.getAABBoxTests(this);\r\n\r\n    const vx = Direction.isLeft(this._direction)\r\n      ? -this.stepDistance\r\n      : Direction.isRight(this._direction)\r\n      ? this.stepDistance\r\n      : 0;\r\n    const vy = Direction.isUp(this._direction)\r\n      ? -this.stepDistance\r\n      : Direction.isDown(this._direction)\r\n      ? this.stepDistance\r\n      : 0;\r\n\r\n    // Gather any solid characters within the \"here\" bounding box\r\n    const events = $gameMap.events().filter(function (event) {\r\n      for (let ii = 0; ii < bboxTests.length; ii++) {\r\n        if (event.isTriggerIn(triggers)) {\r\n          if (event.isNormalPriority()) {\r\n            if (\r\n              Collider.aabboxCheck(\r\n                bboxTests[ii].x + vx,\r\n                bboxTests[ii].y + vy,\r\n                bboxTests[ii].aabbox,\r\n                event._x,\r\n                event._y,\r\n                event.collider().aabbox,\r\n              )\r\n            ) {\r\n              event.loopMap = bboxTests[ii].type;\r\n              return true;\r\n            }\r\n          } else {\r\n            if (\r\n              Collider.aabboxCheck(\r\n                bboxTests[ii].x,\r\n                bboxTests[ii].y,\r\n                bboxTests[ii].aabbox,\r\n                event._x,\r\n                event._y,\r\n                event.collider().aabbox,\r\n              )\r\n            ) {\r\n              event.loopMap = bboxTests[ii].type;\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    // Test collision with characters\r\n    for (let ii = 0; ii < events.length; ii++) {\r\n      const eventVector = { x: events[ii]._x, y: events[ii]._y };\r\n      const moveVector = getLoopMapCorrection(eventVector, events[ii].loopMap);\r\n      const entryX = moveVector.x;\r\n      const entryY = moveVector.y;\r\n\r\n      if (\r\n        events[ii].isNormalPriority() &&\r\n        Collider.intersect(\r\n          this._x + vx,\r\n          this._y + vy,\r\n          collider,\r\n          entryX,\r\n          entryY,\r\n          events[ii].collider(),\r\n        )\r\n      ) {\r\n        // Normal priority player-touch/event-touch\r\n        events[ii].start();\r\n        this._touchTarget = null;\r\n      } else if (events[ii]._trigger === 2) {\r\n        // Event touch is encasing\r\n        if (\r\n          Collider.encase(\r\n            entryX,\r\n            entryY,\r\n            events[ii].collider(),\r\n            this._x,\r\n            this._y,\r\n            collider,\r\n          ) ||\r\n          Collider.encase(\r\n            this._x,\r\n            this._y,\r\n            collider,\r\n            entryX,\r\n            entryY,\r\n            events[ii].collider(),\r\n          )\r\n        ) {\r\n          events[ii].start();\r\n        }\r\n      } else if (\r\n        Collider.intersect(\r\n          this._x,\r\n          this._y,\r\n          collider,\r\n          entryX,\r\n          entryY,\r\n          events[ii].collider(),\r\n        )\r\n      ) {\r\n        events[ii].start();\r\n      }\r\n    }\r\n  };\r\n\r\n  Game_Player.prototype.checkEventTriggerThere = function (triggers) {\r\n    if (!this.canStartLocalEvents()) return;\r\n    const vx = Direction.isLeft(this._direction)\r\n      ? -this.actionWidth()\r\n      : Direction.isRight(this._direction)\r\n      ? this.actionWidth()\r\n      : 0;\r\n    const vy = Direction.isUp(this._direction)\r\n      ? -this.actionHeight()\r\n      : Direction.isDown(this._direction)\r\n      ? this.actionHeight()\r\n      : 0;\r\n\r\n    const collider = this.collider();\r\n    const bboxTests = $gameMap.getAABBoxTests(this, vx, vy);\r\n\r\n    // Gather any solid characters within the \"there\" bounding box\r\n    const gameMapEventsThere = $gameMap.events().filter(function (event) {\r\n      for (let ii = 0; ii < bboxTests.length; ii++) {\r\n        if (\r\n          event.isTriggerIn(triggers) &&\r\n          event.isNormalPriority() &&\r\n          Collider.aabboxCheck(\r\n            bboxTests[ii].x,\r\n            bboxTests[ii].y,\r\n            bboxTests[ii].aabbox,\r\n            event._x,\r\n            event._y,\r\n            event.collider().aabbox,\r\n          )\r\n        ) {\r\n          event.loopMap = bboxTests[ii].type;\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    // Test collision with characters\r\n    for (let ii = 0; ii < gameMapEventsThere.length; ii++) {\r\n      const eventVector = {\r\n        x: gameMapEventsThere[ii]._x,\r\n        y: gameMapEventsThere[ii]._y,\r\n      };\r\n      const moveVector = getLoopMapCorrection(\r\n        eventVector,\r\n        gameMapEventsThere[ii].loopMap,\r\n      );\r\n      const entryX = moveVector.x;\r\n      const entryY = moveVector.y;\r\n\r\n      if (gameMapEventsThere[ii]._trigger === 2) {\r\n        // Event touch is encasing\r\n        if (\r\n          Collider.encase(\r\n            this._x + vx,\r\n            this._y + vy,\r\n            collider,\r\n            entryX,\r\n            entryY,\r\n            gameMapEventsThere[ii].collider(),\r\n          ) ||\r\n          Collider.encase(\r\n            entryX,\r\n            entryY,\r\n            gameMapEventsThere[ii].collider(),\r\n            this._x + vx,\r\n            this._y + vy,\r\n            collider,\r\n          )\r\n        ) {\r\n          gameMapEventsThere[ii].start();\r\n        }\r\n      } else if (\r\n        Collider.intersect(\r\n          this._x + vx,\r\n          this._y + vy,\r\n          collider,\r\n          entryX,\r\n          entryY,\r\n          gameMapEventsThere[ii].collider(),\r\n        )\r\n      ) {\r\n        gameMapEventsThere[ii].start();\r\n      }\r\n    }\r\n\r\n    if ($gameMap.isAnyEventStarting()) return;\r\n    // Check for counters\r\n    let events = [] as Game_Event[];\r\n    const tiles = $gameMap.getTilesUnder(this, vx, vy);\r\n    for (let ii = 0; ii < tiles.length; ii++) {\r\n      if ($gameMap.isCounter(tiles[ii][0], tiles[ii][1])) {\r\n        const x3 = $gameMap.roundXWithDirection(tiles[ii][0], this._direction);\r\n        const y3 = $gameMap.roundYWithDirection(tiles[ii][1], this._direction);\r\n\r\n        // Gather any solid characters within the \"over counter\" bounding box\r\n        events = events.concat(\r\n          $gameMap.events().filter(function (event) {\r\n            if (\r\n              event.isTriggerIn(triggers) &&\r\n              event.isNormalPriority() &&\r\n              Collider.aabboxCheck(\r\n                x3,\r\n                y3,\r\n                Collider.sharedTile().aabbox,\r\n                event._x,\r\n                event._y,\r\n                event.collider().aabbox,\r\n              )\r\n            ) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }),\r\n        );\r\n      }\r\n    }\r\n\r\n    if (events.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let closest;\r\n    let dist = Number.POSITIVE_INFINITY;\r\n    for (let ii = 0; ii < events.length; ii++) {\r\n      const entryX = events[ii]._x;\r\n      const entryY = events[ii]._y;\r\n\r\n      const dx = this._x - entryX;\r\n      const dy = this._y - entryY;\r\n      const td = dx * dx + dy * dy;\r\n      if (td < dist) {\r\n        dist = td;\r\n        closest = events[ii];\r\n        closest.start();\r\n      }\r\n    }\r\n  };\r\n\r\n  Game_Player.prototype.startMapEvent = function (x, y, triggers, normal) {\r\n    if ($gameMap.isEventRunning()) return;\r\n    $gameMap.eventsXy(x, y).forEach(function (event) {\r\n      if (event.isTriggerIn(triggers) && event.isNormalPriority() === normal) {\r\n        event.start();\r\n      }\r\n    });\r\n  };\r\n\r\n  Game_Player.prototype.moveStraight = function (d) {\r\n    Game_Character.prototype.moveStraight.call(this, d);\r\n  };\r\n\r\n  Game_Player.prototype.moveDiagonally = function (horz, vert) {\r\n    Game_Character.prototype.moveDiagonally.call(this, horz, vert);\r\n  };\r\n\r\n  Game_Player.prototype.getOnVehicle = function () {\r\n    const vx = Direction.isLeft(this._direction)\r\n      ? -0.5\r\n      : Direction.isRight(this._direction)\r\n      ? 0.5\r\n      : 0;\r\n    const vy = Direction.isUp(this._direction)\r\n      ? -0.5\r\n      : Direction.isDown(this._direction)\r\n      ? 0.5\r\n      : 0;\r\n    const bboxTests = $gameMap.getAABBoxTests(this, vx, vy);\r\n\r\n    let vehicle;\r\n    const airship = $gameMap.airship();\r\n    const ship = $gameMap.ship();\r\n    const boat = $gameMap.boat();\r\n\r\n    for (let ii = 0; ii < bboxTests.length; ii++) {\r\n      if (\r\n        !!airship &&\r\n        airship._mapId === $gameMap.mapId() &&\r\n        Collider.aabboxCheck(\r\n          bboxTests[ii].x,\r\n          bboxTests[ii].y,\r\n          bboxTests[ii].aabbox,\r\n          airship._x,\r\n          airship._y,\r\n          airship.collider().aabbox,\r\n        )\r\n      ) {\r\n        this._vehicleType = 'airship';\r\n        this._collisionType = CollisionMesh.AIRSHIP;\r\n        vehicle = airship;\r\n        break;\r\n      }\r\n      if (\r\n        !!ship &&\r\n        ship._mapId === $gameMap.mapId() &&\r\n        Collider.aabboxCheck(\r\n          bboxTests[ii].x,\r\n          bboxTests[ii].y,\r\n          bboxTests[ii].aabbox,\r\n          ship._x,\r\n          ship._y,\r\n          ship.collider().aabbox,\r\n        )\r\n      ) {\r\n        this._vehicleType = 'ship';\r\n        this._collisionType = CollisionMesh.SHIP;\r\n        vehicle = ship;\r\n        break;\r\n      }\r\n      if (\r\n        !!boat &&\r\n        boat._mapId === $gameMap.mapId() &&\r\n        Collider.aabboxCheck(\r\n          bboxTests[ii].x,\r\n          bboxTests[ii].y,\r\n          bboxTests[ii].aabbox,\r\n          boat._x,\r\n          boat._y,\r\n          boat.collider().aabbox,\r\n        )\r\n      ) {\r\n        this._vehicleType = 'boat';\r\n        this._collisionType = CollisionMesh.BOAT;\r\n        vehicle = boat;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (vehicle && this.isInVehicle()) {\r\n      this._vehicleGettingOn = true;\r\n      vehicle._passengerCollider = this.collider();\r\n      this._collider = vehicle.collider();\r\n\r\n      const dx = $gameMap.directionX(this._x, vehicle._x);\r\n      const dy = $gameMap.directionY(this._y, vehicle._y);\r\n\r\n      const wasThrough = this.isThrough();\r\n      this.setThrough(true);\r\n      this.moveVector(dx, dy);\r\n      this.setThrough(wasThrough);\r\n      this.gatherFollowers();\r\n    }\r\n\r\n    return this._vehicleGettingOn;\r\n  };\r\n\r\n  Game_Player.prototype.getOffVehicle = function () {\r\n    if (!this.vehicle().isLandOk(this.x, this.y, this.direction()))\r\n      return this._vehicleGettingOff;\r\n    if (this.isInAirship()) {\r\n      this.setDirection(2);\r\n    }\r\n\r\n    const vhx = this.vehicle().x;\r\n    const vhy = this.vehicle().y;\r\n    const vhd = this.vehicle().direction();\r\n    for (const follower of this._followers._data) {\r\n      follower._x = vhx;\r\n      follower._y = vhy;\r\n      follower._realX = vhx;\r\n      follower._realY = vhy;\r\n      follower.setDirection(vhd);\r\n    }\r\n\r\n    this._followers.synchronize(\r\n      this.vehicle().x,\r\n      this.vehicle().y,\r\n      this.vehicle().direction(),\r\n    );\r\n    this.vehicle().getOff();\r\n\r\n    if (!this.isInAirship()) {\r\n      const vehicleBox = this.vehicle().collider().aabbox;\r\n      const passengerBox = this.vehicle()._passengerCollider.aabbox;\r\n      const d = this.direction();\r\n\r\n      // Get disembark direction\r\n      let vx;\r\n      if (Direction.isLeft(d)) {\r\n        vx = Math.floor((-passengerBox.right + vehicleBox.left) * 64) / 64;\r\n      } else if (Direction.isRight(d)) {\r\n        vx = Math.ceil((vehicleBox.right - passengerBox.left) * 64) / 64;\r\n      } else {\r\n        vx = 0;\r\n      }\r\n      let vy;\r\n      if (Direction.isUp(d)) {\r\n        vy = Math.floor((-passengerBox.bottom + vehicleBox.top) * 64) / 64;\r\n      } else if (Direction.isDown(d)) {\r\n        vy = Math.ceil((vehicleBox.bottom - passengerBox.top) * 64) / 64;\r\n      } else {\r\n        vy = 0;\r\n      }\r\n\r\n      this.setThrough(true);\r\n      this.moveVector(vx, vy);\r\n      this.setThrough(false);\r\n\r\n      this.setTransparent(false);\r\n    }\r\n\r\n    this._vehicleGettingOff = true;\r\n    this.setMoveSpeed(4);\r\n    this.setThrough(false);\r\n    this.makeEncounterCount();\r\n    this.gatherFollowers();\r\n    return this._vehicleGettingOff;\r\n  };\r\n\r\n  Game_Player.prototype.updateVehicleGetOff = function () {\r\n    if (\r\n      !(\r\n        !this.areFollowersGathering() &&\r\n        this.vehicle().isLowest() &&\r\n        this._collisionType !== CollisionMesh.WALK\r\n      )\r\n    )\r\n      return;\r\n    this._collider = this.vehicle()._passengerCollider;\r\n    this.vehicle()._passengerCollider = undefined;\r\n    this._collisionType = CollisionMesh.WALK;\r\n    this._vehicleGettingOff = false;\r\n    this._vehicleType = 'walk';\r\n    this.setTransparent(false);\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Game_Player.prototype.actionWidth = function () {\r\n    const bbox = this.collider().aabbox;\r\n    const width = bbox.right - bbox.left;\r\n    return width < 1 ? width : 1;\r\n  };\r\n\r\n  Game_Player.prototype.actionHeight = function () {\r\n    const bbox = this.collider().aabbox;\r\n    const height = bbox.bottom - bbox.top;\r\n    return height < 1 ? height : 1;\r\n  };\r\n\r\n  /**\r\n   * Game_Follower\r\n   */\r\n\r\n  Game_Follower.prototype.initMembers = function () {\r\n    Game_Character.prototype.initMembers.call(this);\r\n    this._collider = Collider.createFromXML(FOLLOWERS.COLLIDER_LIST);\r\n    this._isFrozen = false;\r\n    this._circularMovement = FOLLOWERS.CIRCULAR_MOVEMENT;\r\n  };\r\n\r\n  Game_Follower.prototype.chaseCharacter = function (character) {\r\n    if (this._moveTarget || this._isFrozen) {\r\n      return;\r\n    }\r\n\r\n    const displayWidth = Graphics.width / $gameMap.tileWidth();\r\n    const displayHeight = Graphics.height / $gameMap.tileHeight();\r\n\r\n    const aabbox = this.collider().aabbox;\r\n    const width = aabbox.right - aabbox.left;\r\n    const height = aabbox.bottom - aabbox.top;\r\n\r\n    const ax = this._x + (aabbox.left + aabbox.right) / 2;\r\n    const ay = this._y + (aabbox.top + aabbox.bottom) / 2;\r\n\r\n    // Teleportation\r\n    const midX = $gameMap.canvasToMapX(Graphics.width / 2);\r\n    const dmX = $gameMap.directionX(ax, midX);\r\n    if (dmX > displayWidth + width) {\r\n      // Off left edge\r\n      const tx = $gameMap.canvasToMapX(0) - width;\r\n      if ($gameMap.canWalk(this, tx, this._y)) {\r\n        this.setPosition(tx, this._y);\r\n      }\r\n    } else if (dmX < -displayWidth - width) {\r\n      // Off right edge\r\n      const tx = $gameMap.canvasToMapX(Graphics.width) + width;\r\n      if ($gameMap.canWalk(this, tx, this._y)) {\r\n        this.setPosition(tx, this._y);\r\n      }\r\n    }\r\n    const midY = $gameMap.canvasToMapY(Graphics.height / 2);\r\n    const dmY = $gameMap.directionY(ay, midY);\r\n    if (dmY > displayHeight + height) {\r\n      // Off top edge\r\n      const ty = $gameMap.canvasToMapY(0) - height;\r\n      if ($gameMap.canWalk(this, this._x, ty)) {\r\n        this.setPosition(this._x, ty);\r\n      }\r\n    } else if (dmY < -displayHeight - height) {\r\n      // Off bottom edge\r\n      const ty = $gameMap.canvasToMapY(Graphics.height) + height;\r\n      if ($gameMap.canWalk(this, this._x, ty)) {\r\n        this.setPosition(this._x, ty);\r\n      }\r\n    }\r\n\r\n    const characterBox = character.collider().aabbox;\r\n    const cWidth = characterBox.right - characterBox.left;\r\n    const cHeight = characterBox.bottom - characterBox.top;\r\n\r\n    const bx = character._x + (characterBox.left + characterBox.right) / 2;\r\n    const by = character._y + (characterBox.top + characterBox.bottom) / 2;\r\n\r\n    let dx = $gameMap.directionX(ax, bx);\r\n    let dy = $gameMap.directionY(ay, by);\r\n\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    const radius =\r\n      this.collider().type === Collider.CIRCLE\r\n        ? this.collider().radius || 0 // VELEE:\r\n        : (width > height ? width : height) / 2;\r\n    const characterRadius =\r\n      character.collider().type === Collider.CIRCLE\r\n        ? character.collider().radius || 0 // VELEE:\r\n        : (cWidth > cHeight ? cWidth : cHeight) / 2;\r\n\r\n    if (distance > (radius + characterRadius) * $gameSystem._followerDistance) {\r\n      // Chase if far away\r\n      this.setMoveSpeed(character.realMoveSpeed());\r\n      this.setThrough($gamePlayer.isThrough() || $gamePlayer.isDebugThrough());\r\n\r\n      if (distance > 2) {\r\n        dx /= distance;\r\n        dy /= distance;\r\n      }\r\n\r\n      if (this._circularMovement) {\r\n        this.moveVector(dx * this.stepDistance, dy * this.stepDistance);\r\n      } else {\r\n        const vector = Direction.normalizeSquare(dx, dy);\r\n        this.moveVector(\r\n          vector.x * this.stepDistance,\r\n          vector.y * this.stepDistance,\r\n        );\r\n      }\r\n\r\n      this.setThrough(true);\r\n    }\r\n\r\n    if (this.isOnLadder()) {\r\n      this.setDirection(8);\r\n    } else if (!this._wasMoving) {\r\n      const adx = Math.abs(dx);\r\n      const ady = Math.abs(dy);\r\n      if (adx > ady) {\r\n        this.setDirectionVector(dx, 0);\r\n      } else if (ady > adx) {\r\n        this.setDirectionVector(0, dy);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Game_Follower.prototype.setFrozen = function (frozen) {\r\n    this._isFrozen = frozen;\r\n  };\r\n\r\n  /**\r\n   * Game_Followers\r\n   */\r\n\r\n  Game_Followers.prototype.update = function () {\r\n    if (this.areGathering()) {\r\n      const direction = $gamePlayer.direction();\r\n      const visibleFollowers = this.visibleFollowers();\r\n      for (let ii = 0; ii < visibleFollowers.length; ii++) {\r\n        const follower = visibleFollowers[ii];\r\n\r\n        let dx = $gameMap.directionX(follower._x, this._targetX);\r\n        let dy = $gameMap.directionY(follower._y, this._targetY);\r\n\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        dx /= distance;\r\n        dy /= distance;\r\n\r\n        follower.setThrough(true);\r\n        follower.moveVector(\r\n          dx * follower.stepDistance,\r\n          dy * follower.stepDistance,\r\n        );\r\n        follower.setThrough(false);\r\n        follower.setDirection(direction);\r\n      }\r\n\r\n      if (this.areGathered()) {\r\n        this._gathering = false;\r\n      }\r\n    } else {\r\n      this.updateMove();\r\n    }\r\n    this.visibleFollowers().forEach(function (follower) {\r\n      follower.update();\r\n    }, this);\r\n\r\n    if ($gameSystem._staticFollowerDistance != FOLLOWERS.DISTANCE) {\r\n      $gameSystem._staticFollowerDistance = FOLLOWERS.DISTANCE;\r\n      $gameSystem._followerDistance = FOLLOWERS.DISTANCE;\r\n    }\r\n  };\r\n\r\n  Game_Followers.prototype.gather = function () {\r\n    this._gathering = true;\r\n    this._targetX = $gamePlayer._x;\r\n    this._targetY = $gamePlayer._y;\r\n  };\r\n\r\n  Game_Followers.prototype.areGathered = function () {\r\n    let screenRadius =\r\n      Math.sqrt(\r\n        Graphics.width * Graphics.width + Graphics.height * Graphics.height,\r\n      ) / 2;\r\n    screenRadius /=\r\n      Math.sqrt(\r\n        $gameMap.tileWidth() * $gameMap.tileWidth() +\r\n          $gameMap.tileHeight() * $gameMap.tileHeight(),\r\n      ) / 2;\r\n\r\n    const visibleFollowers = this.visibleFollowers();\r\n    for (let ii = 0; ii < visibleFollowers.length; ii++) {\r\n      const follower = visibleFollowers[ii];\r\n\r\n      const dx = $gameMap.directionX(follower._realX, this._targetX);\r\n      const dy = $gameMap.directionY(follower._realY, this._targetY);\r\n\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n      if (distance > screenRadius) {\r\n        // Don't count if off screen\r\n        continue;\r\n      } else if (distance > follower.stepDistance) {\r\n        return false;\r\n      } else {\r\n        follower._x = this._targetX;\r\n        follower._y = this._targetY;\r\n        follower._realX = this._targetX;\r\n        follower._realY = this._targetY;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Game_Followers.prototype.contains = function (item) {\r\n    return this._data.indexOf(item) >= 0;\r\n  };\r\n\r\n  /**\r\n   * Game_Vehicle\r\n   */\r\n\r\n  const Game_Vehicle_initialize = Game_Vehicle.prototype.initialize;\r\n  Game_Vehicle.prototype.initialize = function (type) {\r\n    Game_Vehicle_initialize.call(this, type);\r\n\r\n    if (this.isAirship()) {\r\n      this._collider = Collider.createFromXML(VEHICLES.AIRSHIP_COLLIDER_LIST);\r\n    } else if (this.isShip()) {\r\n      this._collider = Collider.createFromXML(VEHICLES.SHIP_COLLIDER_LIST);\r\n    } else if (this.isBoat()) {\r\n      this._collider = Collider.createFromXML(VEHICLES.BOAT_COLLIDER_LIST);\r\n    } else {\r\n      this._collider = Collider.sharedCharacter();\r\n    }\r\n  };\r\n\r\n  Game_Vehicle.prototype.isLandOk = function (x, y, d) {\r\n    if (this.isAirship()) {\r\n      $gamePlayer._collider = this._passengerCollider; // Reset colliders temporarily\r\n      // Check rough tiles under colliders\r\n      const tiles = $gameMap\r\n        .getTilesUnder(this)\r\n        .concat($gameMap.getTilesUnder($gamePlayer));\r\n      let canWalk = true;\r\n      for (let ii = 0; ii < tiles.length; ii++) {\r\n        if (!$gameMap.isAirshipLandOk(tiles[ii][0], tiles[ii][1])) {\r\n          canWalk = false;\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        canWalk &&\r\n        ($gameMap.touchesCharacters(this, x, y) ||\r\n          $gameMap.touchesCharacters($gamePlayer, x, y))\r\n      ) {\r\n        canWalk = false;\r\n      }\r\n      $gamePlayer._collider = this.collider(); // Undo player collider reset\r\n      return canWalk;\r\n    } else {\r\n      const vehicleBox = this.collider().aabbox;\r\n      const passengerBox = this._passengerCollider.aabbox;\r\n\r\n      // Get disembark direction\r\n      // const tw = $gameMap.tileWidth();\r\n      // const th = $gameMap.tileHeight();\r\n      let vx;\r\n      if (Direction.isLeft(d)) {\r\n        vx = Math.floor((-passengerBox.right + vehicleBox.left) * 64) / 64;\r\n      } else if (Direction.isRight(d)) {\r\n        vx = Math.ceil((vehicleBox.right - passengerBox.left) * 64) / 64;\r\n      } else {\r\n        vx = 0;\r\n      }\r\n      let vy;\r\n      if (Direction.isUp(d)) {\r\n        vy = Math.floor((-passengerBox.bottom + vehicleBox.top) * 64) / 64;\r\n      } else if (Direction.isDown(d)) {\r\n        vy = Math.ceil((vehicleBox.bottom - passengerBox.top) * 64) / 64;\r\n      } else {\r\n        vy = 0;\r\n      }\r\n\r\n      const reverseDirection = this.reverseDir(d);\r\n      $gamePlayer._collider = this._passengerCollider; // Reset colliders temporarily\r\n\r\n      // Check rough tiles under player\r\n      const tiles = $gameMap.getTilesUnder($gamePlayer, vx, vy);\r\n      let canWalk = true;\r\n      for (let ii = 0; ii < tiles.length; ii++) {\r\n        if (\r\n          !$gameMap.isAABBoxValid(tiles[ii][0], tiles[ii][1], vehicleBox) ||\r\n          !$gameMap.isAABBoxValid(tiles[ii][0], tiles[ii][1], passengerBox)\r\n        ) {\r\n          canWalk = false;\r\n          break;\r\n        } else if (\r\n          !$gameMap.isPassable(tiles[ii][0], tiles[ii][1], reverseDirection)\r\n        ) {\r\n          canWalk = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (canWalk && $gameMap.touchesCharacters($gamePlayer, x + vx, y + vy)) {\r\n        canWalk = false;\r\n      }\r\n      $gamePlayer._collider = this.collider(); // Undo player collider reset\r\n      return canWalk;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Game_Event\r\n   */\r\n\r\n  const Game_Event_setupPageSettings = Game_Event.prototype.setupPageSettings;\r\n  Game_Event.prototype.setupPageSettings = function () {\r\n    Game_Event_setupPageSettings.call(this);\r\n    this.collider();\r\n  };\r\n\r\n  const Game_Event_start = Game_Event.prototype.start;\r\n  Game_Event.prototype.start = function () {\r\n    if (this._lastFrame === Graphics.frameCount) {\r\n      return;\r\n    }\r\n    Game_Event_start.call(this);\r\n    this._lastFrame = Graphics.frameCount + 1;\r\n  };\r\n\r\n  Game_Event.prototype.getStoredCollider = function () {\r\n    const mapId = $gameMap.mapId();\r\n    if (!$gameSystem._eventColliders[mapId]) return undefined;\r\n    return $gameSystem._eventColliders[mapId][this.eventId()] || undefined;\r\n  };\r\n\r\n  function getColliderPreset(collider: Document | '') {\r\n    if (collider instanceof Node) {\r\n      const preset = collider.querySelectorAll('preset, ps');\r\n      if (preset.length > 0) {\r\n        return Collider.getPreset(preset[0].innerHTML?.trim() || '');\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  Game_Event.prototype.getNoteCollider = function () {\r\n    const note = this.event().note;\r\n    if (note === '') return undefined;\r\n    const noteCollider = xmlParser(note);\r\n    const preset = getColliderPreset(noteCollider);\r\n    if (preset !== undefined) return preset;\r\n    return Collider.createFromXML(xmlParser(note));\r\n  };\r\n\r\n  Game_Event.prototype.getCommentCollider = function () {\r\n    const comments = this.page()\r\n      .list.filter((l) => l.code === 108 || l.code === 408)\r\n      .map((l) => l.parameters[0]);\r\n\r\n    if (comments.length > 0) {\r\n      const commentNode = xmlParser('<doc>' + comments.join('\\n') + '</doc>');\r\n      const preset = getColliderPreset(commentNode);\r\n      if (preset !== undefined) return preset;\r\n      if (commentNode instanceof Node) {\r\n        return Collider.createFromXML(commentNode.innerHTML);\r\n      }\r\n      return Collider.null();\r\n    }\r\n  };\r\n\r\n  Game_Event.prototype.getPresetCollider = function () {\r\n    const dataEvent = $dataMap.events[this.eventId()];\r\n    const presetId = dataEvent ? dataEvent.meta.collider : null;\r\n    if (presetId) {\r\n      const asNum = +presetId;\r\n      if (isNaN(asNum)) {\r\n        return Collider.getPreset(presetId.trim());\r\n      } else {\r\n        return Collider.getPreset(asNum);\r\n      }\r\n    }\r\n  };\r\n\r\n  Game_Event.prototype.getDefaultCollider = function () {\r\n    if (this.isTile() || !this.characterName() || this.isObjectCharacter()) {\r\n      return Collider.createFromXML(EVENT.TILE_COLLIDER_LIST);\r\n    }\r\n    return Collider.createFromXML(EVENT.CHARACTER_COLLIDER_LIST);\r\n  };\r\n\r\n  Game_Event.prototype.collider = function () {\r\n    const page = this.page();\r\n    if (!page) return Collider.null();\r\n    page._collider =\r\n      page._collider ||\r\n      this.getStoredCollider() ||\r\n      this.getNoteCollider() ||\r\n      this.getCommentCollider();\r\n\r\n    this._hasCustomCollider = !!page._collider;\r\n\r\n    if (!page._collider) {\r\n      page._collider = this.getDefaultCollider();\r\n    }\r\n    return page._collider;\r\n  };\r\n\r\n  Game_Event.prototype.setCollider = function (collider) {\r\n    const pages = this.event().pages;\r\n    for (let ii = 0; ii < pages.length; ii++) {\r\n      pages[ii]._collider = collider;\r\n    }\r\n    $gameSystem._eventColliders[$gameMap.mapId()][this.eventId()] = collider;\r\n  };\r\n\r\n  Game_Event.prototype.checkEventTriggerTouch = function (x, y) {\r\n    if (\r\n      !(\r\n        this._trigger === 2 &&\r\n        !$gameMap.isEventRunning() &&\r\n        !this.isJumping() &&\r\n        this.isNormalPriority()\r\n      )\r\n    )\r\n      return;\r\n    const bboxTests = $gameMap.getAABBoxTests(this, x - this._x, y - this._y);\r\n    let loopMap = -1;\r\n    for (let ii = 0; ii < bboxTests.length; ii++) {\r\n      if (\r\n        Collider.aabboxCheck(\r\n          bboxTests[ii].x,\r\n          bboxTests[ii].y,\r\n          bboxTests[ii].aabbox,\r\n          $gamePlayer._x,\r\n          $gamePlayer._y,\r\n          $gamePlayer.collider().aabbox,\r\n        )\r\n      ) {\r\n        loopMap = bboxTests[ii].type;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (loopMap < 0) {\r\n      return;\r\n    }\r\n\r\n    const playerVector = { x: $gamePlayer._x, y: $gamePlayer._y };\r\n    const moveVector = getLoopMapCorrection(playerVector, loopMap);\r\n    const playerX = moveVector.x;\r\n    const playerY = moveVector.y;\r\n\r\n    if (\r\n      Collider.intersect(\r\n        x,\r\n        y,\r\n        this.collider(),\r\n        playerX,\r\n        playerY,\r\n        $gamePlayer.collider(),\r\n      )\r\n    ) {\r\n      this.start();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Game_Interpreter\r\n   */\r\n\r\n  const Game_Interpreter_command101 = Game_Interpreter.prototype.command101;\r\n  Game_Interpreter.prototype.command101 = function (params?: string[]) {\r\n    $gamePlayer._touchTarget = null;\r\n    return Game_Interpreter_command101.call(this, params);\r\n  };\r\n\r\n  /**\r\n   * Game_Map\r\n   */\r\n\r\n  const Game_Map_setup = Game_Map.prototype.setup;\r\n  Game_Map.prototype.setup = function (mapId) {\r\n    Game_Map_setup.call(this, mapId);\r\n    if ($gameSystem._eventColliders[mapId]) return;\r\n    $gameSystem._eventColliders[mapId] = [];\r\n  };\r\n\r\n  Game_Map.prototype.tileId = function (x, y, z) {\r\n    x = x | 0;\r\n    y = y | 0;\r\n    const width = $dataMap.width;\r\n    const height = $dataMap.height;\r\n    return $dataMap.data[(z * height + y) * width + x] || 0;\r\n  };\r\n\r\n  Game_Map.prototype.canvasToMapX = function (x) {\r\n    const tileWidth = this.tileWidth();\r\n    const originX = this._displayX * tileWidth;\r\n    const mapX = (originX + x) / tileWidth;\r\n    return this.roundX(mapX);\r\n  };\r\n\r\n  Game_Map.prototype.canvasToMapY = function (y) {\r\n    const tileHeight = this.tileHeight();\r\n    const originY = this._displayY * tileHeight;\r\n    const mapY = (originY + y) / tileHeight;\r\n    return this.roundY(mapY);\r\n  };\r\n\r\n  /**\r\n   * Extensions\r\n   */\r\n\r\n  Game_Map.prototype.directionX = function (ax, bx) {\r\n    if (this.isLoopHorizontal()) {\r\n      const dxA = bx - ax;\r\n      const dxB = bx - this.width() - ax;\r\n      const dxC = bx + this.width() - ax;\r\n      const dx = Math.abs(dxA) < Math.abs(dxB) ? dxA : dxB;\r\n      return Math.abs(dx) < Math.abs(dxC) ? dx : dxC;\r\n    } else {\r\n      return bx - ax;\r\n    }\r\n  };\r\n\r\n  Game_Map.prototype.directionY = function (ay, by) {\r\n    if (this.isLoopVertical()) {\r\n      const dyA = by - ay;\r\n      const dyB = by - this.height() - ay;\r\n      const dyC = by + this.height() - ay;\r\n      const dy = Math.abs(dyA) < Math.abs(dyB) ? dyA : dyB;\r\n      return Math.abs(dy) < Math.abs(dyC) ? dy : dyC;\r\n    } else {\r\n      return by - ay;\r\n    }\r\n  };\r\n\r\n  Game_Map.prototype.collisionMesh = function (collisionType) {\r\n    collisionType = collisionType || CollisionMesh.WALK;\r\n    return CollisionMesh.getMesh(this.mapId(), collisionType);\r\n  };\r\n\r\n  Game_Map.prototype.getCharactersUnderPoint = function (x, y) {\r\n    return this.characters().filter(function (entry) {\r\n      if (!entry) {\r\n        return false;\r\n      }\r\n      const aabbox = entry.collider().aabbox;\r\n      if (x < entry._x + aabbox.left) {\r\n        return false;\r\n      } else if (x > entry._x + aabbox.right) {\r\n        return false;\r\n      } else if (y < entry._y + aabbox.top) {\r\n        return false;\r\n      } else if (y > entry._y + aabbox.bottom) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  Game_Map.prototype.getCharactersUnder = function (character, x, y) {\r\n    const vx = x - character.x;\r\n    const vy = y - character.y;\r\n\r\n    const collider = character.collider();\r\n    const bboxTests = this.getAABBoxTests(character, vx, vy);\r\n\r\n    // Gather any solid characters within the movement bounding box\r\n    let characters = this.characters().filter(function (entry) {\r\n      if (!entry) {\r\n        return false;\r\n      }\r\n      for (let ii = 0; ii < bboxTests.length; ii++) {\r\n        if (\r\n          Collider.aabboxCheck(\r\n            bboxTests[ii].x,\r\n            bboxTests[ii].y,\r\n            bboxTests[ii].aabbox,\r\n            entry._x,\r\n            entry._y,\r\n            entry.collider().aabbox,\r\n          )\r\n        ) {\r\n          entry.loopMap = bboxTests[ii].type;\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    characters = characters.filter(function (character) {\r\n      const characterVector = { x: character._x, y: character._y };\r\n      const moveVector = getLoopMapCorrection(\r\n        characterVector,\r\n        character.loopMap,\r\n      );\r\n      const entryX = moveVector.x;\r\n      const entryY = moveVector.y;\r\n\r\n      return Collider.intersect(\r\n        x,\r\n        y,\r\n        collider,\r\n        entryX,\r\n        entryY,\r\n        character.collider(),\r\n      );\r\n    });\r\n\r\n    return characters;\r\n  };\r\n\r\n  Game_Map.prototype.getTilesUnder = function (character, vx, vy) {\r\n    vx = vx || 0;\r\n    vy = vy || 0;\r\n\r\n    const collider = character.collider();\r\n    // const bboxTests = this.getAABBoxTests(character, vx, vy);\r\n    const tiles = [] as [number, number][];\r\n\r\n    // Test collision with map\r\n    const left = Math.floor(character._x + vx + collider.aabbox.left);\r\n    const top = Math.floor(character._y + vy + collider.aabbox.top);\r\n    const right = Math.ceil(\r\n      character._x + vx + collider.aabbox.right - Number.EPSILON,\r\n    );\r\n    const bottom = Math.ceil(\r\n      character._y + vy + collider.aabbox.bottom - Number.EPSILON,\r\n    );\r\n\r\n    const tileCollider = Collider.sharedTile();\r\n    for (let yy = top; yy < bottom; yy++) {\r\n      for (let xx = left; xx < right; xx++) {\r\n        if (\r\n          Collider.intersect(\r\n            character._x + vx,\r\n            character._y + vy,\r\n            collider,\r\n            xx,\r\n            yy,\r\n            tileCollider,\r\n          )\r\n        ) {\r\n          tiles.push([xx, yy]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return tiles;\r\n  };\r\n\r\n  Game_Map.prototype.touchesCharacters = function (character, x, y) {\r\n    const vx = x - character.x;\r\n    const vy = y - character.y;\r\n\r\n    const collider = character.collider();\r\n    const bboxTests = this.getAABBoxTests(character, vx, vy);\r\n\r\n    // Gather any solid characters within the movement bounding box\r\n    const characters = $gameMap.characters().filter(function (entry) {\r\n      if (character.collidableWith(entry)) {\r\n        for (let ii = 0; ii < bboxTests.length; ii++) {\r\n          if (\r\n            Collider.aabboxCheck(\r\n              bboxTests[ii].x,\r\n              bboxTests[ii].y,\r\n              bboxTests[ii].aabbox,\r\n              entry._x,\r\n              entry._y,\r\n              entry.collider().aabbox,\r\n            )\r\n          ) {\r\n            entry.loopMap = bboxTests[ii].type;\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    // Test collision with characters\r\n    for (let ii = 0; ii < characters.length; ii++) {\r\n      const characterVector = { x: characters[ii]._x, y: characters[ii]._y };\r\n      const moveVector = getLoopMapCorrection(\r\n        characterVector,\r\n        character[ii].loopMap,\r\n      );\r\n      const entryX = moveVector.x;\r\n      const entryY = moveVector.y;\r\n\r\n      if (\r\n        Collider.intersect(\r\n          x,\r\n          y,\r\n          collider,\r\n          entryX,\r\n          entryY,\r\n          characters[ii].collider(),\r\n        )\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  Game_Map.prototype.canMoveOn = function (character, x, y, collisionMesh) {\r\n    const collider = character.collider();\r\n    const xd = x - character._x;\r\n    const yd = y - character._y;\r\n    const bboxTests = this.getAABBoxTests(character, xd, yd);\r\n\r\n    // Gather any solid characters within the movement bounding box\r\n    const characters = $gameMap.characters().filter(function (entry) {\r\n      if (character.collidableWith(entry)) {\r\n        for (let ii = 0; ii < bboxTests.length; ii++) {\r\n          if (\r\n            Collider.aabboxCheck(\r\n              bboxTests[ii].x,\r\n              bboxTests[ii].y,\r\n              bboxTests[ii].aabbox,\r\n              entry._x,\r\n              entry._y,\r\n              entry.collider().aabbox,\r\n            )\r\n          ) {\r\n            entry.loopMap = bboxTests[ii].type;\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n\r\n    // Test collision with characters\r\n    for (let ii = 0; ii < characters.length; ii++) {\r\n      const entry = characters[ii];\r\n      const characterVector = { x: entry._x, y: entry._y };\r\n      const moveVector = getLoopMapCorrection(\r\n        characterVector,\r\n        character.loopMap,\r\n      );\r\n      const entryX = moveVector.x;\r\n      const entryY = moveVector.y;\r\n\r\n      if (\r\n        Collider.intersect(\r\n          character._x,\r\n          character._y,\r\n          collider,\r\n          entryX,\r\n          entryY,\r\n          entry.collider(),\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Test collision with map\r\n    for (let ii = 0; ii < bboxTests.length; ii++) {\r\n      const moveVector = getLoopMapCorrection(\r\n        { x: 0, y: 0 },\r\n        bboxTests[ii].type,\r\n      );\r\n      const offsetX = moveVector.x;\r\n      const offsetY = moveVector.y;\r\n\r\n      const mapColliders = Collider.polygonsWithinColliderList(\r\n        bboxTests[ii].x,\r\n        bboxTests[ii].y,\r\n        bboxTests[ii].aabbox,\r\n        0,\r\n        0,\r\n        collisionMesh,\r\n      );\r\n      if (mapColliders.length > 0) {\r\n        for (let jj = 0; jj < mapColliders.length; jj++) {\r\n          if (\r\n            Collider.intersect(\r\n              x,\r\n              y,\r\n              collider,\r\n              offsetX,\r\n              offsetY,\r\n              mapColliders[jj],\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  Game_Map.prototype.isAABBoxValid = function (x, y, aabbox) {\r\n    return (\r\n      aabbox.left + x >= 0 &&\r\n      aabbox.right + x <= this.width() &&\r\n      aabbox.top + y >= 0 &&\r\n      aabbox.bottom + y <= this.height()\r\n    );\r\n  };\r\n\r\n  Game_Map.prototype.canWalk = function (character, x, y) {\r\n    // Passability test\r\n    if (!this.checkPassage(x, y, 0x0f)) {\r\n      return false;\r\n    }\r\n    return this.canMoveOn(\r\n      character,\r\n      x,\r\n      y,\r\n      CollisionMesh.getMesh(this.mapId(), CollisionMesh.WALK),\r\n    );\r\n  };\r\n\r\n  Game_Map.prototype.getAABBoxTests = function (character, vx, vy) {\r\n    let aabbox = character.collider().aabbox;\r\n    if (vx || vy) {\r\n      // Extend aabbox for vectors\r\n      aabbox = {\r\n        left: aabbox.left + (vx < 0 ? vx : 0),\r\n        top: aabbox.top + (vy < 0 ? vy : 0),\r\n        right: aabbox.right + (vx > 0 ? vx : 0),\r\n        bottom: aabbox.bottom + (vy > 0 ? vy : 0),\r\n      };\r\n    }\r\n\r\n    // Construct aabbox tests for map edges\r\n    const bboxTests = [\r\n      { x: character._x, y: character._y, aabbox: aabbox, type: 0 },\r\n    ];\r\n    if (this.isLoopHorizontal()) {\r\n      bboxTests.push({\r\n        x: character._x - this.width(),\r\n        y: character._y,\r\n        aabbox: aabbox,\r\n        type: 1,\r\n      });\r\n      bboxTests.push({\r\n        x: character._x + this.width(),\r\n        y: character._y,\r\n        aabbox: aabbox,\r\n        type: 2,\r\n      });\r\n    }\r\n    if (this.isLoopVertical()) {\r\n      bboxTests.push({\r\n        x: character._x,\r\n        y: character._y - this.height(),\r\n        aabbox: aabbox,\r\n        type: 3,\r\n      });\r\n      bboxTests.push({\r\n        x: character._x,\r\n        y: character._y + this.height(),\r\n        aabbox: aabbox,\r\n        type: 4,\r\n      });\r\n    }\r\n    if (this.isLoopHorizontal() && this.isLoopVertical()) {\r\n      bboxTests.push({\r\n        x: character._x - this.width(),\r\n        y: character._y - this.height(),\r\n        aabbox: aabbox,\r\n        type: 5,\r\n      });\r\n      bboxTests.push({\r\n        x: character._x + this.width(),\r\n        y: character._y - this.height(),\r\n        aabbox: aabbox,\r\n        type: 6,\r\n      });\r\n      bboxTests.push({\r\n        x: character._x - this.width(),\r\n        y: character._y + this.height(),\r\n        aabbox: aabbox,\r\n        type: 7,\r\n      });\r\n      bboxTests.push({\r\n        x: character._x + this.width(),\r\n        y: character._y + this.height(),\r\n        aabbox: aabbox,\r\n        type: 8,\r\n      });\r\n    }\r\n    return bboxTests;\r\n  };\r\n\r\n  Game_Map.prototype.characters = function (player = true) {\r\n    return [\r\n      ...this.events(),\r\n      ...(player ? [$gamePlayer] : []),\r\n      ...this.vehicles(),\r\n      ...$gamePlayer.followers().visibleFollowers(),\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Sprite_Destination\r\n   */\r\n  // cursor change destionation!\r\n  Sprite_Destination.prototype.createBitmap = function () {\r\n    const tileWidth = $gameMap.tileWidth();\r\n    const tileHeight = $gameMap.tileHeight();\r\n    this.bitmap = new Bitmap(tileWidth, tileHeight);\r\n    this.bitmap.drawCircle(\r\n      tileWidth / 2,\r\n      tileHeight / 2,\r\n      (tileWidth < tileHeight ? tileWidth : tileHeight) / 2,\r\n      'white',\r\n    );\r\n    this.anchor.x = 0.5;\r\n    this.anchor.y = 0.5;\r\n    this.blendMode = PIXI.BLEND_MODES.ADD;\r\n  };\r\n\r\n  Sprite_Destination.prototype.update = function () {\r\n    Sprite.prototype.update.call(this);\r\n    if ($gamePlayer._touchTarget) {\r\n      this.updatePosition();\r\n      this.updateAnimation();\r\n      this.visible = true;\r\n    } else {\r\n      this._frameCount = 0;\r\n      this.visible = false;\r\n    }\r\n  };\r\n\r\n  Sprite_Destination.prototype.updatePosition = function () {\r\n    const tileWidth = $gameMap.tileWidth();\r\n    const tileHeight = $gameMap.tileHeight();\r\n    const x = $gamePlayer._touchTarget?.x ?? 0;\r\n    const y = $gamePlayer._touchTarget?.y ?? 0;\r\n    this.x = ($gameMap.adjustX(x) + 0.5) * tileWidth;\r\n    this.y = ($gameMap.adjustY(y) + 0.5) * tileHeight;\r\n  };\r\n\r\n  /**\r\n   * CollisionMesh\r\n   */\r\n\r\n  class CollisionMesh {\r\n    static WALK = 0;\r\n    static BOAT = 1;\r\n    static SHIP = 2;\r\n    static AIRSHIP = 3;\r\n\r\n    static meshInMemory = {\r\n      mapId: null as number | null,\r\n      mesh: [] as Partial<Polygon>[],\r\n    };\r\n    constructor() {\r\n      throw new Error('This is a static class');\r\n    }\r\n\r\n    static getMesh = function (mapId: number, type: number) {\r\n      type = type || CollisionMesh.WALK;\r\n\r\n      if (CollisionMesh.meshInMemory.mapId === mapId) {\r\n        return CollisionMesh.meshInMemory.mesh[type];\r\n      }\r\n      const cacheName = 'cache_mesh%1'.format(mapId.padZero(3));\r\n      if (\r\n        PLAY_TEST.COLLISION_MESH_CACHING &&\r\n        $gameTemp.isPlaytest() &&\r\n        StorageManager.exists(cacheName)\r\n      ) {\r\n        CollisionMesh.meshInMemory.mapId = mapId;\r\n        const cachePath = StorageManager.filePath(cacheName);\r\n        const data = StorageManager.fsReadFile(cachePath);\r\n        CollisionMesh.meshInMemory.mesh = JsonEx.parse(data);\r\n      } else {\r\n        let gameMap;\r\n        if ($gameMap.mapId() === mapId) {\r\n          gameMap = $gameMap;\r\n        } else {\r\n          gameMap = new Game_Map();\r\n          gameMap.setup(mapId);\r\n        }\r\n\r\n        CollisionMesh.meshInMemory.mapId = mapId;\r\n        CollisionMesh.meshInMemory.mesh[CollisionMesh.WALK] =\r\n          CollisionMesh.makeCollisionMesh(gameMap, gameMap.isPassable);\r\n        if (!gameMap.boat().isTransparent()) {\r\n          CollisionMesh.meshInMemory.mesh[CollisionMesh.BOAT] =\r\n            CollisionMesh.makeCollisionMesh(gameMap, gameMap.isBoatPassable);\r\n        }\r\n        if (!gameMap.ship().isTransparent()) {\r\n          CollisionMesh.meshInMemory.mesh[CollisionMesh.SHIP] =\r\n            CollisionMesh.makeCollisionMesh(gameMap, gameMap.isShipPassable);\r\n        }\r\n        if (!gameMap.airship().isTransparent()) {\r\n          CollisionMesh.meshInMemory.mesh[CollisionMesh.AIRSHIP] =\r\n            CollisionMesh.makeCollisionMesh(gameMap);\r\n        }\r\n        StorageManager.saveObject(\r\n          cacheName,\r\n          pruneReplacer(CollisionMesh.meshInMemory.mesh),\r\n        );\r\n      }\r\n\r\n      return CollisionMesh.meshInMemory.mesh[type];\r\n    };\r\n\r\n    static makeCollisionMesh = function (\r\n      gameMap: Game_Map,\r\n      passFunc?: (x: number, y: number, d: number) => boolean,\r\n    ) {\r\n      // Make collision mask\r\n      const collisionGrid = [] as Array<Array<number>>;\r\n      if (!passFunc) {\r\n        passFunc = function () {\r\n          return true;\r\n        };\r\n      }\r\n      for (let xx = 0; xx < gameMap.width(); xx++) {\r\n        collisionGrid[xx] = [];\r\n        for (let yy = 0; yy < gameMap.height(); yy++) {\r\n          collisionGrid[xx][yy] = 0;\r\n          if (!passFunc.call(gameMap, xx, yy, Direction.UP)) {\r\n            collisionGrid[xx][yy] |= 0x1 << 0;\r\n          }\r\n          if (!passFunc.call(gameMap, xx, yy, Direction.LEFT)) {\r\n            collisionGrid[xx][yy] |= 0x1 << 1;\r\n          }\r\n          if (!passFunc.call(gameMap, xx, yy, Direction.DOWN)) {\r\n            collisionGrid[xx][yy] |= 0x1 << 2;\r\n          }\r\n          if (!passFunc.call(gameMap, xx, yy, Direction.RIGHT)) {\r\n            collisionGrid[xx][yy] |= 0x1 << 3;\r\n          }\r\n        }\r\n      }\r\n\r\n      const colliders = [] as PolygonV[];\r\n      const d = 2;\r\n\r\n      // Non-looping sides\r\n      if (!gameMap.isLoopHorizontal()) {\r\n        const q = gameMap.isLoopVertical() ? 0 : d;\r\n        colliders.push(\r\n          Collider.createPolygon([\r\n            [0, 0],\r\n            [0, gameMap.height()],\r\n            [-d, gameMap.height() + q],\r\n            [-d, -q],\r\n          ]),\r\n        );\r\n        colliders.push(\r\n          Collider.createPolygon([\r\n            [gameMap.width(), gameMap.height()],\r\n            [gameMap.width(), 0],\r\n            [gameMap.width() + d, -q],\r\n            [gameMap.width() + d, gameMap.height() + q],\r\n          ]),\r\n        );\r\n      }\r\n      if (!gameMap.isLoopVertical()) {\r\n        const q = gameMap.isLoopHorizontal() ? 0 : d;\r\n        colliders.push(\r\n          Collider.createPolygon([\r\n            [gameMap.width(), 0],\r\n            [0, 0],\r\n            [-q, -d],\r\n            [gameMap.width() + q, -d],\r\n          ]),\r\n        );\r\n        colliders.push(\r\n          Collider.createPolygon([\r\n            [0, gameMap.height()],\r\n            [gameMap.width(), gameMap.height()],\r\n            [gameMap.width() + q, gameMap.height() + d],\r\n            [-q, gameMap.height() + d],\r\n          ]),\r\n        );\r\n      }\r\n\r\n      // Build tiles (Fixes some cases for humpy corner collision)\r\n      for (let yy = 0; yy < gameMap.height(); yy++) {\r\n        const top = gameMap.roundY(yy - 1);\r\n        const bottom = gameMap.roundY(yy + 1);\r\n        for (let xx = 0; xx < gameMap.width(); xx++) {\r\n          if (collisionGrid[xx][yy] !== 0xf) {\r\n            continue;\r\n          }\r\n\r\n          const left = gameMap.roundX(xx - 1);\r\n          const right = gameMap.roundX(xx + 1);\r\n\r\n          let open = 0;\r\n          if (left < 0 || collisionGrid[left][yy] == 0) {\r\n            open++;\r\n          }\r\n          if (top < 0 || collisionGrid[xx][top] == 0) {\r\n            open++;\r\n          }\r\n          if (right >= gameMap.width() || collisionGrid[right][yy] == 0) {\r\n            open++;\r\n          }\r\n          if (bottom >= gameMap.height() || collisionGrid[xx][bottom] == 0) {\r\n            open++;\r\n          }\r\n\r\n          if (open === 4) {\r\n            collisionGrid[xx][yy] = 0;\r\n            colliders.push(\r\n              Collider.createPolygon([\r\n                [xx, yy],\r\n                [xx + 1, yy],\r\n                [xx + 1, yy + 1],\r\n                [xx, yy + 1],\r\n              ]),\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      // Build horizontal lines\r\n      let horizontalLine = null as Vertice[] | null;\r\n      const hColliders = [];\r\n      for (let yy = 0; yy < gameMap.height(); yy++) {\r\n        for (let xx = 0; xx < gameMap.width(); xx++) {\r\n          const y2 = gameMap.roundY(yy - 1);\r\n          if (\r\n            collisionGrid[xx][yy] & (0x1 << 0) ||\r\n            (y2 >= 0 && collisionGrid[xx][y2] & (0x1 << 2))\r\n          ) {\r\n            // Can't move up or down\r\n            // Is a horizontal line\r\n            if (!horizontalLine) {\r\n              horizontalLine = [[xx, yy]];\r\n            }\r\n            horizontalLine[1] = [xx + 1, yy];\r\n          } else if (!!horizontalLine) {\r\n            hColliders.push(Collider.createPolygon(horizontalLine));\r\n            hColliders.push(\r\n              Collider.createPolygon([\r\n                [horizontalLine[1][0], horizontalLine[1][1]],\r\n                [horizontalLine[0][0], horizontalLine[0][1]],\r\n              ]),\r\n            );\r\n            horizontalLine = null;\r\n          }\r\n        }\r\n        if (!!horizontalLine) {\r\n          hColliders.push(Collider.createPolygon(horizontalLine));\r\n          hColliders.push(\r\n            Collider.createPolygon([\r\n              [horizontalLine[1][0], horizontalLine[1][1]],\r\n              [horizontalLine[0][0], horizontalLine[0][1]],\r\n            ]),\r\n          );\r\n          horizontalLine = null;\r\n        }\r\n      }\r\n\r\n      // Build vertical lines\r\n      let verticalLine = null as Vertice[] | null;\r\n      const vColliders = [];\r\n      for (let xx = 0; xx < gameMap.width(); xx++) {\r\n        for (let yy = 0; yy < gameMap.height(); yy++) {\r\n          const x2 = gameMap.roundX(xx - 1);\r\n          if (\r\n            collisionGrid[xx][yy] & (0x1 << 1) ||\r\n            (x2 >= 0 && collisionGrid[x2][yy] & (0x1 << 3))\r\n          ) {\r\n            // Can't move left or right\r\n            // Is a vertical line\r\n            if (!verticalLine) {\r\n              verticalLine = [[xx, yy]];\r\n            }\r\n            verticalLine[1] = [xx, yy + 1];\r\n          } else if (!!verticalLine) {\r\n            vColliders.push(Collider.createPolygon(verticalLine));\r\n            vColliders.push(\r\n              Collider.createPolygon([\r\n                [verticalLine[1][0], verticalLine[1][1]],\r\n                [verticalLine[0][0], verticalLine[0][1]],\r\n              ]),\r\n            );\r\n            verticalLine = null;\r\n          }\r\n        }\r\n        if (!!verticalLine) {\r\n          vColliders.push(Collider.createPolygon(verticalLine));\r\n          vColliders.push(\r\n            Collider.createPolygon([\r\n              [verticalLine[1][0], verticalLine[1][1]],\r\n              [verticalLine[0][0], verticalLine[0][1]],\r\n            ]),\r\n          );\r\n          verticalLine = null;\r\n        }\r\n      }\r\n\r\n      // TileD colliders\r\n      CollisionMesh.tileDColliders(gameMap, colliders);\r\n\r\n      // We sort the horizontal and vertical lines separately as we check\r\n      // map collision in two stages: horizontal then vertical\r\n      const collisionMesh = Collider.createList();\r\n      if (colliders.length > 0) {\r\n        Collider.addToList(collisionMesh, Collider.treeFromArray(colliders));\r\n      }\r\n      if (hColliders.length > 0) {\r\n        Collider.addToList(collisionMesh, Collider.treeFromArray(hColliders));\r\n      }\r\n      if (vColliders.length > 0) {\r\n        Collider.addToList(collisionMesh, Collider.treeFromArray(vColliders));\r\n      }\r\n      return collisionMesh;\r\n    };\r\n\r\n    static tileDColliders = function (\r\n      gameMap: Game_Map,\r\n      colliders: PolygonV[],\r\n    ) {\r\n      if (!gameMap.tiledData) return;\r\n      const tileWidth = gameMap.tileWidth();\r\n      const tileHeight = gameMap.tileHeight();\r\n      const scale = gameMap.isHalfTile && gameMap.isHalfTile() ? 2 : 1;\r\n      const tilesetColliders = [] as Array<{\r\n        [x: string]: Array<TiledLayerObject>;\r\n      }>;\r\n\r\n      // Build tile colliders\r\n      const tilesets = gameMap.tiledData.tilesets;\r\n      for (let ii = 0; ii < tilesets.length; ii++) {\r\n        tilesetColliders[ii] = {};\r\n\r\n        const tiles = tilesets[ii].tiles;\r\n        for (const key in tiles) {\r\n          if (tiles[key].objectgroup) {\r\n            tilesetColliders[ii][key] = tiles[key].objectgroup.objects;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Place tile colliders\r\n      for (let ii = 0; ii < gameMap.tiledData.layers.length; ii++) {\r\n        const layer = gameMap.tiledData.layers[ii];\r\n        for (let yy = 0; yy < layer.height; yy++) {\r\n          const row = yy * layer.width;\r\n          for (let xx = 0; xx < layer.width; xx++) {\r\n            let tileId = layer.data[row + xx];\r\n            if (tileId === 0) {\r\n              continue;\r\n            }\r\n            tileId++;\r\n\r\n            // Find tileset belonging to tileId\r\n            let tilesetId = -1;\r\n            let firstId = 0;\r\n            for (let jj = 0; jj < gameMap.tiledData.tilesets.length; jj++) {\r\n              firstId = gameMap.tiledData.tilesets[jj].firstgid;\r\n              const lastId = firstId + gameMap.tiledData.tilesets[jj].tilecount;\r\n              if (tileId >= firstId && tileId <= lastId) {\r\n                tilesetId = jj;\r\n                break;\r\n              }\r\n            }\r\n            if (tilesetId < 0) {\r\n              continue;\r\n            }\r\n\r\n            // Get objectGroup for this tileId\r\n            const tileSet = tilesetColliders[tilesetId];\r\n            const objectGroup = tileSet['' + (tileId - firstId - 1)];\r\n            if (objectGroup) {\r\n              for (let jj = 0; jj < objectGroup.length; jj++) {\r\n                const object = objectGroup[jj];\r\n                const x = xx * scale;\r\n                const y = yy * scale;\r\n                CollisionMesh.addTileDCollisionObject(\r\n                  x,\r\n                  y,\r\n                  object,\r\n                  scale,\r\n                  tileWidth,\r\n                  tileHeight,\r\n                  colliders,\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Find collision mesh layers\r\n      for (let ii = 0; ii < gameMap.tiledData.layers.length; ii++) {\r\n        const layer = gameMap.tiledData.layers[ii];\r\n        if (\r\n          layer.type == 'objectgroup' &&\r\n          layer.properties &&\r\n          layer.properties.collision == 'mesh'\r\n        ) {\r\n          for (let jj = 0; jj < layer.objects.length; jj++) {\r\n            CollisionMesh.addTileDCollisionObject(\r\n              0,\r\n              0,\r\n              layer.objects[jj],\r\n              scale,\r\n              tileWidth,\r\n              tileHeight,\r\n              colliders,\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    static addTileDCollisionObject = function (\r\n      x: number,\r\n      y: number,\r\n      object: TiledLayerObject,\r\n      scale: 2 | 1,\r\n      tileWidth: number,\r\n      tileHeight: number,\r\n      colliders: PolygonV[],\r\n    ) {\r\n      x += object.x / tileWidth;\r\n      y += object.y / tileHeight;\r\n      if (object.polygon) {\r\n        // Polygon\r\n        const polygon = [] as Vertice[];\r\n        for (let ii = 0; ii < object.polygon.length; ii++) {\r\n          polygon[ii] = [\r\n            x + object.polygon[ii].x / tileWidth,\r\n            y + object.polygon[ii].y / tileHeight,\r\n          ];\r\n        }\r\n        colliders.push(Collider.createPolygon(polygon));\r\n      } else if (object.polyline) {\r\n        // Polyline\r\n        let polylines;\r\n        if (object.polyline.length == 2) {\r\n          polylines = Collider.createPolygon([\r\n            [\r\n              x + object.polyline[0].x / tileWidth,\r\n              y + object.polyline[0].y / tileWidth,\r\n            ],\r\n            [\r\n              x + object.polyline[1].x / tileHeight,\r\n              y + object.polyline[1].y / tileHeight,\r\n            ],\r\n          ]);\r\n        } else {\r\n          polylines = Collider.createList();\r\n          for (let ii = 0; ii < object.polyline.length - 1; ii++) {\r\n            Collider.addToList(\r\n              polylines,\r\n              Collider.createPolygon([\r\n                [\r\n                  x + object.polyline[ii].x / tileWidth,\r\n                  y + object.polyline[ii].y / tileWidth,\r\n                ],\r\n                [\r\n                  x + object.polyline[ii + 1].x / tileHeight,\r\n                  y + object.polyline[ii + 1].y / tileHeight,\r\n                ],\r\n              ]),\r\n            );\r\n          }\r\n        }\r\n        colliders.push(polylines);\r\n      } else if (object.ellipse) {\r\n        // Ellipse\r\n        if (object.width == object.height) {\r\n          // Circle\r\n          const rad = object.width / tileWidth / 2;\r\n          colliders.push(Collider.createCircle(x + rad, y + rad, rad));\r\n        } else {\r\n          // Regular polygon\r\n          const rx = object.width / tileWidth / 2;\r\n          const ry = object.height / tileHeight / 2;\r\n          const points =\r\n            object.properties && object.properties.points\r\n              ? object.properties.points\r\n              : 8;\r\n          colliders.push(\r\n            Collider.createRegularPolygon(x + rx, y + ry, rx, ry, points),\r\n          );\r\n        }\r\n      } else {\r\n        // Rect\r\n        const w = object.width / tileWidth;\r\n        const h = object.height / tileHeight;\r\n        colliders.push(Collider.createRect(x, y, w, h));\r\n      }\r\n    };\r\n  }\r\n\r\n  function xmlParser(xml: string) {\r\n    // filtering unknown shapes values\r\n    function filterUnknownShapes(childNodes: Node[]) {\r\n      return Array.from(childNodes).filter((node) =>\r\n        [\r\n          'rect',\r\n          'circle',\r\n          'line',\r\n          'polygon',\r\n          'regular',\r\n          'preset',\r\n          'ps',\r\n        ].contains(node.nodeName),\r\n      );\r\n    }\r\n    // Force xml in root tag\r\n    const xmlDoc = DOM_PARSER.parseFromString(\r\n      `<root>${xml}</root>`,\r\n      'text/xml',\r\n    );\r\n    const colliderNodes = xmlDoc.querySelectorAll('collider, col');\r\n\r\n    if (!colliderNodes.length) return '';\r\n\r\n    const newCollider = xmlDoc.createElement('collider');\r\n\r\n    if (colliderNodes.length === 1) {\r\n      newCollider.append(...filterUnknownShapes(colliderNodes[0].childNodes));\r\n      return newCollider;\r\n    }\r\n    // if multiple collider tags\r\n    // merge all children in new unique collider tag\r\n    colliderNodes.forEach((collider: { childNodes: Node[] }) => {\r\n      newCollider.append(...filterUnknownShapes(collider.childNodes));\r\n    });\r\n    return newCollider;\r\n  }\r\n\r\n  class Collider {\r\n    static CIRCLE = 0;\r\n    static POLYGON = 1;\r\n    static LIST = 2;\r\n    static PRECISION = Math.pow(2, 7);\r\n    static I_PRECISION = 1 / Collider.PRECISION;\r\n    static PRESETS = {} as {\r\n      [key: string]: PolygonV;\r\n      [Symbol.iterator]: () => Generator<PolygonV>;\r\n    };\r\n    static _null: PolygonV;\r\n    static _sharedTile: Omit<Polygon, 'colliders'>;\r\n    static _sharedCircle: Omit<Polygon, 'colliders' | 'vertices'>;\r\n    static _sharedCharacter: Omit<Polygon, 'colliders' | 'vertices'>;\r\n    static _sharedAirship: Omit<Polygon, 'colliders' | 'vertices'>;\r\n    static _sharedShip: Omit<Polygon, 'colliders' | 'vertices'>;\r\n    static _sharedBoat: Omit<Polygon, 'colliders' | 'vertices'>;\r\n\r\n    constructor() {\r\n      throw new Error('This is a static class');\r\n    }\r\n\r\n    static createList = function (): Omit<Polygon, 'vertices' | 'x' | 'y'> {\r\n      return {\r\n        type: Collider.LIST,\r\n        colliders: [],\r\n        aabbox: {\r\n          left: Number.POSITIVE_INFINITY,\r\n          top: Number.POSITIVE_INFINITY,\r\n          right: Number.NEGATIVE_INFINITY,\r\n          bottom: Number.NEGATIVE_INFINITY,\r\n        },\r\n      };\r\n    };\r\n\r\n    static addToList = function (\r\n      list: Omit<Polygon, 'vertices' | 'x' | 'y'>,\r\n      collider:\r\n        | Omit<Polygon, 'vertices' | 'x' | 'y'>\r\n        | Omit<Polygon, 'vertices' | 'colliders'>,\r\n    ) {\r\n      if (!list.colliders) list.colliders = [];\r\n      list.colliders.push(collider);\r\n      list.aabbox.left =\r\n        collider.aabbox.left < list.aabbox.left\r\n          ? collider.aabbox.left\r\n          : list.aabbox.left;\r\n      list.aabbox.top =\r\n        collider.aabbox.top < list.aabbox.top\r\n          ? collider.aabbox.top\r\n          : list.aabbox.top;\r\n      list.aabbox.right =\r\n        collider.aabbox.right > list.aabbox.right\r\n          ? collider.aabbox.right\r\n          : list.aabbox.right;\r\n      list.aabbox.bottom =\r\n        collider.aabbox.bottom > list.aabbox.bottom\r\n          ? collider.aabbox.bottom\r\n          : list.aabbox.bottom;\r\n    };\r\n\r\n    static importPresets() {\r\n      if (Object.keys(Collider.PRESETS).length === 0) {\r\n        // Index starts at 1 (first item is null collider)\r\n        Collider.PRESETS[0] = Collider.null();\r\n        for (let ii = 0; ii < PRESETS.length; ii++) {\r\n          const xmlDoc = DOM_PARSER.parseFromString(\r\n            '<collider>' + JSON.parse(PRESETS[ii]) + '</collider>',\r\n            'text/xml',\r\n          );\r\n          Collider.PRESETS[ii + 1] = Collider.createFromXML(xmlDoc);\r\n\r\n          const childNodes = xmlDoc.childNodes[0].childNodes;\r\n          for (let jj = 0; jj < childNodes.length; jj++) {\r\n            if (childNodes[jj].nodeName === 'name') {\r\n              Collider.PRESETS[childNodes[jj].innerHTML.trim()] =\r\n                Collider.PRESETS[ii + 1];\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    static getPreset = function (id: number | string) {\r\n      Collider.importPresets();\r\n      return Collider.PRESETS[id] || null;\r\n    };\r\n\r\n    static createFromXML = function (xml: string | Document) {\r\n      const xmlDoc =\r\n        typeof xml === 'string'\r\n          ? DOM_PARSER.parseFromString(xml, 'text/xml')\r\n          : xml;\r\n      let childNodes = xmlDoc.childNodes;\r\n      for (let ii = 0; ii < xmlDoc.childNodes.length; ii++) {\r\n        if (xmlDoc.childNodes[ii].nodeName === 'collider') {\r\n          childNodes = xmlDoc.childNodes[ii].childNodes;\r\n          break;\r\n        }\r\n      }\r\n      const filterNodes = [];\r\n      for (let ii = 0; ii < childNodes.length; ii++) {\r\n        switch (childNodes[ii].nodeName) {\r\n          case 'rect':\r\n          case 'circle':\r\n          case 'line':\r\n          case 'polygon':\r\n          case 'regular':\r\n            filterNodes.push(childNodes[ii]);\r\n            break;\r\n        }\r\n      }\r\n      childNodes = filterNodes;\r\n      if (childNodes.length === 0) {\r\n        return Collider.null();\r\n      } else if (childNodes.length === 1) {\r\n        switch (childNodes[0].nodeName) {\r\n          case 'rect':\r\n            const x = Number(childNodes[0].getAttribute('x'));\r\n            const y = Number(childNodes[0].getAttribute('y'));\r\n            const width = Number(childNodes[0].getAttribute('width'));\r\n            const height = Number(childNodes[0].getAttribute('height'));\r\n            return Collider.createRect(x, y, width, height);\r\n          case 'circle':\r\n            let cx = Number(childNodes[0].getAttribute('cx'));\r\n            let cy = Number(childNodes[0].getAttribute('cy'));\r\n            const r = Number(childNodes[0].getAttribute('r'));\r\n            return Collider.createCircle(cx, cy, r);\r\n          case 'line':\r\n            const x1 = Number(childNodes[0].getAttribute('x1'));\r\n            const y1 = Number(childNodes[0].getAttribute('y1'));\r\n            const x2 = Number(childNodes[0].getAttribute('x2'));\r\n            const y2 = Number(childNodes[0].getAttribute('y2'));\r\n            return Collider.createLine(x1, y1, x2, y2);\r\n          case 'polygon':\r\n            const pointsAttr = childNodes[0].getAttribute('points')?.split(' ');\r\n            if (!pointsAttr) return Collider.null();\r\n            const points = [] as Array<Vertice>;\r\n            for (let jj = 0; jj < pointsAttr.length; jj++) {\r\n              const axis = pointsAttr[jj].split(',');\r\n              for (let kk = 0; kk < axis.length; kk++) {\r\n                points[jj][kk] = Number(axis[kk]);\r\n              }\r\n            }\r\n            return Collider.createPolygon(points);\r\n          case 'regular':\r\n            cx = Number(childNodes[0].getAttribute('cx'));\r\n            cy = Number(childNodes[0].getAttribute('cy'));\r\n            const rx = Number(childNodes[0].getAttribute('rx'));\r\n            const ry = Number(childNodes[0].getAttribute('ry'));\r\n            const p = Number(childNodes[0].getAttribute('p'));\r\n            return Collider.createRegularPolygon(cx, cy, rx, ry, p);\r\n        }\r\n      } else {\r\n        const colliderList = Collider.createList();\r\n        for (let ii = 0; ii < childNodes.length; ii++) {\r\n          switch (childNodes[ii].nodeName) {\r\n            case 'rect':\r\n              const x = Number(childNodes[ii].getAttribute('x'));\r\n              const y = Number(childNodes[ii].getAttribute('y'));\r\n              const width = Number(childNodes[ii].getAttribute('width'));\r\n              const height = Number(childNodes[ii].getAttribute('height'));\r\n              Collider.addToList(\r\n                colliderList,\r\n                Collider.createRect(x, y, width, height),\r\n              );\r\n              break;\r\n            case 'circle':\r\n              let cx = Number(childNodes[ii].getAttribute('cx'));\r\n              let cy = Number(childNodes[ii].getAttribute('cy'));\r\n              const r = Number(childNodes[ii].getAttribute('r'));\r\n              Collider.addToList(\r\n                colliderList,\r\n                Collider.createCircle(cx, cy, r),\r\n              );\r\n              break;\r\n            case 'line':\r\n              const x1 = Number(childNodes[ii].getAttribute('x1'));\r\n              const y1 = Number(childNodes[ii].getAttribute('y1'));\r\n              const x2 = Number(childNodes[ii].getAttribute('x2'));\r\n              const y2 = Number(childNodes[ii].getAttribute('y2'));\r\n              Collider.addToList(\r\n                colliderList,\r\n                Collider.createLine(x1, y1, x2, y2),\r\n              );\r\n              break;\r\n            case 'polygon':\r\n              const pointsAttr = childNodes[0]\r\n                .getAttribute('points')\r\n                ?.split(' ');\r\n              if (!pointsAttr) return Collider.null();\r\n              const points = [] as Array<Vertice>;\r\n              for (let jj = 0; jj < pointsAttr.length; jj++) {\r\n                const axis = pointsAttr[jj].split(',');\r\n                for (let kk = 0; kk < axis.length; kk++) {\r\n                  points[jj][kk] = Number(axis[kk]);\r\n                }\r\n              }\r\n              Collider.addToList(colliderList, Collider.createPolygon(points));\r\n              break;\r\n            case 'regular':\r\n              cx = Number(childNodes[ii].getAttribute('cx'));\r\n              cy = Number(childNodes[ii].getAttribute('cy'));\r\n              const rx = Number(childNodes[ii].getAttribute('rx'));\r\n              const ry = Number(childNodes[ii].getAttribute('ry'));\r\n              const p = Number(childNodes[ii].getAttribute('p'));\r\n              Collider.addToList(\r\n                colliderList,\r\n                Collider.createRegularPolygon(cx, cy, rx, ry, p),\r\n              );\r\n              break;\r\n          }\r\n        }\r\n        return colliderList;\r\n      }\r\n      return Collider.null(); // VELEE:\r\n    };\r\n\r\n    static createRect = function (\r\n      x: number,\r\n      y: number,\r\n      width: number,\r\n      height: number,\r\n    ) {\r\n      return Collider.createPolygon([\r\n        [x, y],\r\n        [x + width, y],\r\n        [x + width, y + height],\r\n        [x, y + height],\r\n      ]);\r\n    };\r\n\r\n    static createLine = function (\r\n      x1: number,\r\n      y1: number,\r\n      x2: number,\r\n      y2: number,\r\n    ) {\r\n      return Collider.createPolygon([\r\n        [x1, y1],\r\n        [x2, y2],\r\n      ]);\r\n    };\r\n\r\n    static createCircle = function (\r\n      x: number,\r\n      y: number,\r\n      radius: number,\r\n    ): Omit<Polygon, 'vertices' | 'colliders'> {\r\n      return {\r\n        type: Collider.CIRCLE,\r\n        x: x,\r\n        y: y,\r\n        radius: radius,\r\n        aabbox: {\r\n          left: x - radius,\r\n          top: y - radius,\r\n          right: x + radius,\r\n          bottom: y + radius,\r\n        },\r\n      };\r\n    };\r\n\r\n    static createPolygon = function (\r\n      vertices: Vertice[],\r\n    ): Omit<Polygon, 'colliders'> {\r\n      const aabbox = {\r\n        left: Number.POSITIVE_INFINITY,\r\n        top: Number.POSITIVE_INFINITY,\r\n        right: Number.NEGATIVE_INFINITY,\r\n        bottom: Number.NEGATIVE_INFINITY,\r\n      };\r\n      vertices.forEach(function (vertex) {\r\n        if (vertex[0] < aabbox.left) {\r\n          aabbox.left = vertex[0];\r\n        }\r\n        if (vertex[1] < aabbox.top) {\r\n          aabbox.top = vertex[1];\r\n        }\r\n        if (vertex[0] > aabbox.right) {\r\n          aabbox.right = vertex[0];\r\n        }\r\n        if (vertex[1] > aabbox.bottom) {\r\n          aabbox.bottom = vertex[1];\r\n        }\r\n      });\r\n      // return { type: Collider.POLYGON, vertices: vertices, aabbox: aabbox };\r\n      return { type: Collider.POLYGON, vertices, aabbox, x: 0, y: 0 }; // VELEE:\r\n    };\r\n\r\n    static createRegularPolygon = function (\r\n      x: number,\r\n      y: number,\r\n      sx: number,\r\n      sy: number,\r\n      points: number,\r\n    ) {\r\n      if (!points || points < 3) {\r\n        return Collider.createCircle(x, y, Math.sqrt(sx * sx + sy * sy));\r\n      }\r\n      const vertices = [] as Vertice[];\r\n      const divisor = points / (Math.PI * 2);\r\n      const pi2 = Math.PI / 2;\r\n      for (let ii = 0; ii < points; ii++) {\r\n        vertices.push([\r\n          x + Math.cos(ii / divisor - pi2) * sx,\r\n          y + Math.sin(ii / divisor - pi2) * sy,\r\n        ]);\r\n      }\r\n      return Collider.createPolygon(vertices);\r\n    };\r\n\r\n    static null = function () {\r\n      if (!Collider._null) {\r\n        Collider._null = Collider.createPolygon([]);\r\n      }\r\n      return Collider._null;\r\n    };\r\n\r\n    static sharedTile = function () {\r\n      if (!Collider._sharedTile) {\r\n        Collider._sharedTile = Collider.createPolygon([\r\n          [0, 0],\r\n          [1, 0],\r\n          [1, 1],\r\n          [0, 1],\r\n        ]);\r\n      }\r\n      return Collider._sharedTile;\r\n    };\r\n\r\n    static sharedCircle = function () {\r\n      if (!Collider._sharedCircle) {\r\n        Collider._sharedCircle = Collider.createCircle(0.5, 0.5, 0.5);\r\n      }\r\n      return Collider._sharedCircle;\r\n    };\r\n\r\n    static sharedCharacter = function () {\r\n      if (!Collider._sharedCharacter) {\r\n        Collider._sharedCharacter = Collider.createCircle(0.5, 0.7, 0.25);\r\n      }\r\n      return Collider._sharedCharacter;\r\n    };\r\n\r\n    static sharedAirship = function () {\r\n      if (!Collider._sharedAirship) {\r\n        Collider._sharedAirship = Collider.createCircle(0.5, 0.5, 0.25);\r\n      }\r\n      return Collider._sharedAirship;\r\n    };\r\n\r\n    static sharedShip = function () {\r\n      if (!Collider._sharedShip) {\r\n        Collider._sharedShip = Collider.createCircle(0.5, 0.5, 0.5);\r\n      }\r\n      return Collider._sharedShip;\r\n    };\r\n\r\n    static sharedBoat = function () {\r\n      if (!Collider._sharedBoat) {\r\n        Collider._sharedBoat = Collider.createCircle(0.5, 0.5, 1 / 3);\r\n      }\r\n      return Collider._sharedBoat;\r\n    };\r\n\r\n    static polygonsWithinColliderList = function (\r\n      ax: number,\r\n      ay: number,\r\n      aabbox: Aabbox,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      let polygons = [] as PolygonV[];\r\n      if (!bc.colliders) return polygons;\r\n      for (let ii = 0; ii < bc.colliders.length; ii++) {\r\n        if (\r\n          Collider.aabboxCheck(ax, ay, aabbox, bx, by, bc.colliders[ii].aabbox)\r\n        ) {\r\n          if (bc.colliders[ii].type === Collider.LIST) {\r\n            polygons = polygons.concat(\r\n              Collider.polygonsWithinColliderList(\r\n                ax,\r\n                ay,\r\n                aabbox,\r\n                bx,\r\n                by,\r\n                bc.colliders[ii],\r\n              ),\r\n            );\r\n          } else {\r\n            polygons.push(bc.colliders[ii]);\r\n          }\r\n        }\r\n      }\r\n      return polygons;\r\n    };\r\n\r\n    static encaseCircleCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (!(ac.x && ac.y && bc.x && bc.y && ac.radius && bc.radius))\r\n        return false;\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n      bx = bx + bc.x;\r\n      by = by + bc.y;\r\n\r\n      const dx = ax - bx;\r\n      const dy = ay - by;\r\n      let dd = dx * dx + dy * dy;\r\n      dd -= bc.radius * bc.radius;\r\n      if (dd < ac.radius * ac.radius) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    static intersectCircleCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (!(ac.x && ac.y && bc.x && bc.y && ac.radius && bc.radius))\r\n        return false;\r\n\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n      bx = bx + bc.x;\r\n      by = by + bc.y;\r\n\r\n      const dx = ax - bx;\r\n      const dy = ay - by;\r\n      const dd = dx * dx + dy * dy;\r\n      const rr = bc.radius + ac.radius;\r\n      if (dd < rr * rr) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    static moveCircleCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n      vector: Vector,\r\n    ) {\r\n      if (!(ac.x && ac.y && bc.x && bc.y && ac.radius && bc.radius))\r\n        return vector;\r\n\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n      bx = bx + bc.x;\r\n      by = by + bc.y;\r\n\r\n      const dx = ax + vector.x - bx;\r\n      const dy = ay + vector.y - by;\r\n      let dd = dx * dx + dy * dy;\r\n      const rr = bc.radius + ac.radius;\r\n      if (dd < rr * rr) {\r\n        dd = rr - Math.sqrt(dd);\r\n        const dl = Math.sqrt(dx * dx + dy * dy);\r\n        vector.x += (dx / dl) * dd;\r\n        vector.y += (dy / dl) * dd;\r\n      }\r\n\r\n      return vector;\r\n    };\r\n\r\n    static encaseCirclePolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (!(ac.x && ac.y && ac.radius && bc.vertices)) return false;\r\n\r\n      const aradius = ac.radius + Collider.I_PRECISION;\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n\r\n      const closestPoint = {\r\n        distance: Number.POSITIVE_INFINITY,\r\n        dx: 0,\r\n        dy: 0,\r\n        index: 0,\r\n      };\r\n\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const dx = ax - (bx + bc.vertices[ii][0]);\r\n        const dy = ay - (by + bc.vertices[ii][1]);\r\n        const d = dx * dx + dy * dy;\r\n        if (d < closestPoint.distance) {\r\n          closestPoint.dx = dx;\r\n          closestPoint.dy = dy;\r\n          closestPoint.distance = d;\r\n          closestPoint.index = ii;\r\n        }\r\n      }\r\n\r\n      let planeX = closestPoint.dx;\r\n      let planeY = closestPoint.dy;\r\n      const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n      planeX /= length;\r\n      planeY /= length;\r\n\r\n      // Project circle\r\n      const point = planeX * ax + planeY * ay;\r\n      const maxA = point + aradius;\r\n      const minA = point - aradius;\r\n\r\n      // Project polygon\r\n      let minB = Number.POSITIVE_INFINITY;\r\n      let maxB = Number.NEGATIVE_INFINITY;\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const projection =\r\n          planeX * (bx + bc.vertices[ii][0]) +\r\n          planeY * (by + bc.vertices[ii][1]);\r\n        if (projection < minB) minB = projection;\r\n        if (projection > maxB) maxB = projection;\r\n      }\r\n\r\n      if (minB < minA || maxB > maxA) {\r\n        return false;\r\n      }\r\n\r\n      let jj;\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        jj = ii + 1;\r\n        if (jj == bc.vertices.length) {\r\n          jj = 0;\r\n        }\r\n\r\n        let planeX = bc.vertices[jj][1] - bc.vertices[ii][1];\r\n        let planeY = bc.vertices[ii][0] - bc.vertices[jj][0];\r\n        const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n        planeX /= length;\r\n        planeY /= length;\r\n\r\n        // Project circle\r\n        const point = planeX * ax + planeY * ay;\r\n        const maxA = point + aradius;\r\n        const minA = point - aradius;\r\n\r\n        // Project polygon\r\n        let minB = Number.POSITIVE_INFINITY;\r\n        let maxB = Number.NEGATIVE_INFINITY;\r\n        for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n          const projection =\r\n            planeX * (bx + bc.vertices[kk][0]) +\r\n            planeY * (by + bc.vertices[kk][1]);\r\n          if (projection < minB) minB = projection;\r\n          if (projection > maxB) maxB = projection;\r\n        }\r\n\r\n        if (minB < minA || maxB > maxA) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    static intersectCirclePolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (!(ac.x && ac.y && ac.radius && bc.vertices)) return false;\r\n\r\n      const aradius = ac.radius;\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n\r\n      const closestPoint = {\r\n        distance: Number.POSITIVE_INFINITY,\r\n        dx: 0,\r\n        dy: 0,\r\n        index: 0,\r\n      };\r\n\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const dx = ax - (bx + bc.vertices[ii][0]);\r\n        const dy = ay - (by + bc.vertices[ii][1]);\r\n        const d = dx * dx + dy * dy;\r\n        if (d < closestPoint.distance) {\r\n          closestPoint.dx = dx;\r\n          closestPoint.dy = dy;\r\n          closestPoint.distance = d;\r\n          closestPoint.index = ii;\r\n        }\r\n      }\r\n\r\n      let planeX = closestPoint.dx;\r\n      let planeY = closestPoint.dy;\r\n      const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n      planeX /= length;\r\n      planeY /= length;\r\n\r\n      // Project circle\r\n      const point = planeX * ax + planeY * ay;\r\n      const maxA = point + aradius;\r\n      const minA = point - aradius;\r\n\r\n      // Project polygon\r\n      let minB = Number.POSITIVE_INFINITY;\r\n      let maxB = Number.NEGATIVE_INFINITY;\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const projection =\r\n          planeX * (bx + bc.vertices[ii][0]) +\r\n          planeY * (by + bc.vertices[ii][1]);\r\n        if (projection < minB) minB = projection;\r\n        if (projection > maxB) maxB = projection;\r\n      }\r\n\r\n      if (minA >= maxB || maxA <= minB) {\r\n        // No collision\r\n        return false;\r\n      }\r\n\r\n      let jj;\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        jj = ii + 1;\r\n        if (jj == bc.vertices.length) {\r\n          jj = 0;\r\n        }\r\n\r\n        let planeX = bc.vertices[jj][1] - bc.vertices[ii][1];\r\n        let planeY = bc.vertices[ii][0] - bc.vertices[jj][0];\r\n        const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n        planeX /= length;\r\n        planeY /= length;\r\n\r\n        // Project circle\r\n        const point = planeX * ax + planeY * ay;\r\n        const maxA = point + aradius;\r\n        const minA = point - aradius;\r\n\r\n        // Project polygon\r\n        let minB = Number.POSITIVE_INFINITY;\r\n        let maxB = Number.NEGATIVE_INFINITY;\r\n        for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n          const projection =\r\n            planeX * (bx + bc.vertices[kk][0]) +\r\n            planeY * (by + bc.vertices[kk][1]);\r\n          if (projection < minB) minB = projection;\r\n          if (projection > maxB) maxB = projection;\r\n        }\r\n\r\n        if (minA > maxB || maxA < minB) {\r\n          // No collision\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    static moveCirclePolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n      vector: Vector,\r\n    ) {\r\n      if (!(ac.x && ac.y && ac.radius && bc.vertices)) return vector;\r\n      const aradius = ac.radius;\r\n      ax = ax + ac.x;\r\n      ay = ay + ac.y;\r\n\r\n      const closestPoint = {\r\n        distance: Number.POSITIVE_INFINITY,\r\n        dx: 0,\r\n        dy: 0,\r\n        index: 0,\r\n      };\r\n\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const dx = ax + vector.x - (bx + bc.vertices[ii][0]);\r\n        const dy = ay + vector.y - (by + bc.vertices[ii][1]);\r\n        const d = dx * dx + dy * dy;\r\n        if (d < closestPoint.distance) {\r\n          closestPoint.dx = dx;\r\n          closestPoint.dy = dy;\r\n          closestPoint.distance = d;\r\n          closestPoint.index = ii;\r\n        }\r\n      }\r\n\r\n      let correctionDistance;\r\n      let correctionX;\r\n      let correctionY;\r\n      let absDistance;\r\n\r\n      let planeX = closestPoint.dx;\r\n      let planeY = closestPoint.dy;\r\n      const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n      planeX /= length;\r\n      planeY /= length;\r\n\r\n      // Project circle\r\n      const point = planeX * (ax + vector.x) + planeY * (ay + vector.y);\r\n      const maxA = point + aradius;\r\n      const minA = point - aradius;\r\n\r\n      // Project polygon\r\n      let minB = Number.POSITIVE_INFINITY;\r\n      let maxB = Number.NEGATIVE_INFINITY;\r\n\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        const projection =\r\n          planeX * (bx + bc.vertices[ii][0]) +\r\n          planeY * (by + bc.vertices[ii][1]);\r\n        if (projection < minB) minB = projection;\r\n        if (projection > maxB) maxB = projection;\r\n      }\r\n\r\n      if (minA > maxB || maxA < minB) {\r\n        // No collision\r\n        return vector;\r\n      }\r\n\r\n      correctionDistance = maxB - minA;\r\n      correctionX = planeX;\r\n      correctionY = planeY;\r\n      absDistance = Math.abs(correctionDistance);\r\n\r\n      let jj;\r\n      for (let ii = 0; ii < bc.vertices.length; ii++) {\r\n        jj = ii + 1;\r\n        if (jj == bc.vertices.length) {\r\n          jj = 0;\r\n        }\r\n\r\n        let planeX = bc.vertices[jj][1] - bc.vertices[ii][1];\r\n        let planeY = bc.vertices[ii][0] - bc.vertices[jj][0];\r\n        const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n        planeX /= length;\r\n        planeY /= length;\r\n\r\n        // Project circle\r\n        const point = planeX * (ax + vector.x) + planeY * (ay + vector.y);\r\n        const maxA = point + aradius;\r\n        const minA = point - aradius;\r\n\r\n        // Project polygon\r\n        let minB = Number.POSITIVE_INFINITY;\r\n        let maxB = Number.NEGATIVE_INFINITY;\r\n        for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n          const projection =\r\n            planeX * (bx + bc.vertices[kk][0]) +\r\n            planeY * (by + bc.vertices[kk][1]);\r\n          if (projection < minB) minB = projection;\r\n          if (projection > maxB) maxB = projection;\r\n        }\r\n\r\n        if (minA > maxB || maxA < minB) {\r\n          // No collision\r\n          return vector;\r\n        }\r\n\r\n        const distance = maxB - minA;\r\n        const gap = Math.abs(distance);\r\n        if (gap < absDistance) {\r\n          correctionDistance = distance;\r\n          correctionX = planeX;\r\n          correctionY = planeY;\r\n          absDistance = gap;\r\n        }\r\n      }\r\n\r\n      vector.x += correctionX * correctionDistance;\r\n      vector.y += correctionY * correctionDistance;\r\n\r\n      return vector;\r\n    };\r\n\r\n    static encasePolygonCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (!(bc.x && bc.y && bc.radius && ac.vertices)) return false;\r\n\r\n      const aradius = bc.radius - Collider.I_PRECISION;\r\n      bx = bx + bc.x;\r\n      by = by + bc.y;\r\n\r\n      const closestPoint = {\r\n        distance: Number.POSITIVE_INFINITY,\r\n        dx: 0,\r\n        dy: 0,\r\n        index: 0,\r\n      };\r\n\r\n      for (let ii = 0; ii < ac.vertices.length; ii++) {\r\n        const dx = bx - (ax + ac.vertices[ii][0]);\r\n        const dy = by - (ay + ac.vertices[ii][1]);\r\n        const d = dx * dx + dy * dy;\r\n        if (d < closestPoint.distance) {\r\n          closestPoint.dx = dx;\r\n          closestPoint.dy = dy;\r\n          closestPoint.distance = d;\r\n          closestPoint.index = ii;\r\n        }\r\n      }\r\n\r\n      let planeX = closestPoint.dx;\r\n      let planeY = closestPoint.dy;\r\n      const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n      planeX /= length;\r\n      planeY /= length;\r\n\r\n      // Project circle\r\n      const point = planeX * bx + planeY * by;\r\n      const maxA = point + aradius;\r\n      const minA = point - aradius;\r\n\r\n      // Project polygon\r\n      let minB = Number.POSITIVE_INFINITY;\r\n      let maxB = Number.NEGATIVE_INFINITY;\r\n      for (let ii = 0; ii < ac.vertices.length; ii++) {\r\n        const projection =\r\n          planeX * (ax + ac.vertices[ii][0]) +\r\n          planeY * (ay + ac.vertices[ii][1]);\r\n        if (projection < minB) minB = projection;\r\n        if (projection > maxB) maxB = projection;\r\n      }\r\n\r\n      if (minA < minB || maxA > maxB) {\r\n        return false;\r\n      }\r\n\r\n      let jj;\r\n      for (let ii = 0; ii < ac.vertices.length; ii++) {\r\n        jj = ii + 1;\r\n        if (jj == ac.vertices.length) {\r\n          jj = 0;\r\n        }\r\n\r\n        let planeX = ac.vertices[jj][1] - ac.vertices[ii][1];\r\n        let planeY = ac.vertices[ii][0] - ac.vertices[jj][0];\r\n        const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n        planeX /= length;\r\n        planeY /= length;\r\n\r\n        // Project circle\r\n        const point = planeX * bx + planeY * by;\r\n        const maxA = point + aradius;\r\n        const minA = point - aradius;\r\n\r\n        // Project polygon\r\n        let minB = Number.POSITIVE_INFINITY;\r\n        let maxB = Number.NEGATIVE_INFINITY;\r\n        for (let kk = 0; kk < ac.vertices.length; kk++) {\r\n          const projection =\r\n            planeX * (ax + ac.vertices[kk][0]) +\r\n            planeY * (ay + ac.vertices[kk][1]);\r\n          if (projection < minB) minB = projection;\r\n          if (projection > maxB) maxB = projection;\r\n        }\r\n\r\n        if (minA < minB || maxA > maxB) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    static intersectPolygonCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      return Collider.intersectCirclePolygon(bx, by, bc, ax, ay, ac);\r\n    };\r\n\r\n    static movePolygonCircle = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n      vector: Vector,\r\n    ) {\r\n      let ivector = {\r\n        x: -vector.x,\r\n        y: -vector.y,\r\n      };\r\n      ivector = Collider.moveCirclePolygon(bx, by, bc, ax, ay, ac, ivector);\r\n      vector.x = -ivector.x;\r\n      vector.y = -ivector.y;\r\n      return vector;\r\n    };\r\n\r\n    static encasePolygonPolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      let jj: number;\r\n      const colliders = [bc, ac];\r\n      if (!(ac.vertices && bc.vertices)) return true;\r\n      for (let cc = 0; cc < colliders.length; cc++) {\r\n        for (let ii = 0; ii < (colliders[cc].vertices?.length ?? 0); ii++) {\r\n          jj = ii + 1;\r\n          const vertices = colliders[cc].vertices;\r\n          if (vertices) {\r\n            if (jj == vertices.length) {\r\n              jj = 0;\r\n            }\r\n            let planeX = vertices[jj][1] - vertices[ii][1];\r\n            let planeY = vertices[ii][0] - vertices[jj][0];\r\n            const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n            planeX /= length;\r\n            planeY /= length;\r\n\r\n            // Project polygon A\r\n            let minA = Number.POSITIVE_INFINITY;\r\n            let maxA = Number.NEGATIVE_INFINITY;\r\n\r\n            for (let kk = 0; kk < ac.vertices.length; kk++) {\r\n              const projection =\r\n                planeX * (ax + ac.vertices[kk][0]) +\r\n                planeY * (ay + ac.vertices[kk][1]);\r\n              if (projection < minA) minA = projection;\r\n              if (projection > maxA) maxA = projection;\r\n            }\r\n\r\n            // Project polygon B\r\n            let minB = Number.POSITIVE_INFINITY;\r\n            let maxB = Number.NEGATIVE_INFINITY;\r\n            for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n              const projection =\r\n                planeX * (bx + bc.vertices[kk][0]) +\r\n                planeY * (by + bc.vertices[kk][1]);\r\n              if (projection < minB) minB = projection;\r\n              if (projection > maxB) maxB = projection;\r\n            }\r\n\r\n            if (minB < minA || maxB > maxA) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    static intersectPolygonPolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      let jj;\r\n      const colliders = [bc, ac];\r\n      for (let cc = 0; cc < 2; cc++) {\r\n        const vertices = colliders[cc].vertices;\r\n        if (!(vertices && ac.vertices && bc.vertices)) return true;\r\n        for (let ii = 0; ii < vertices.length; ii++) {\r\n          jj = ii + 1;\r\n          if (jj == vertices.length) {\r\n            jj = 0;\r\n          }\r\n\r\n          let planeX = vertices[jj][1] - vertices[ii][1];\r\n          let planeY = vertices[ii][0] - vertices[jj][0];\r\n          const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n          planeX /= length;\r\n          planeY /= length;\r\n\r\n          // Project polygon A\r\n          let minA = Number.POSITIVE_INFINITY;\r\n          let maxA = Number.NEGATIVE_INFINITY;\r\n          for (let kk = 0; kk < ac.vertices.length; kk++) {\r\n            const projection =\r\n              planeX * (ax + ac.vertices[kk][0]) +\r\n              planeY * (ay + ac.vertices[kk][1]);\r\n            if (projection < minA) minA = projection;\r\n            if (projection > maxA) maxA = projection;\r\n          }\r\n\r\n          // Project polygon B\r\n          let minB = Number.POSITIVE_INFINITY;\r\n          let maxB = Number.NEGATIVE_INFINITY;\r\n          for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n            const projection =\r\n              planeX * (bx + bc.vertices[kk][0]) +\r\n              planeY * (by + bc.vertices[kk][1]);\r\n            if (projection < minB) minB = projection;\r\n            if (projection > maxB) maxB = projection;\r\n          }\r\n\r\n          if (minA > maxB || maxA < minB) {\r\n            // No collision\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    };\r\n\r\n    static movePolygonPolygon = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n      vector: Vector,\r\n    ) {\r\n      let correctionDistance = 0; // VELEE:\r\n      let correctionX = 0; // VELEE:\r\n      let correctionY = 0; // VELEE:\r\n      let absDistance = Number.POSITIVE_INFINITY;\r\n      let jj;\r\n      const colliders = [bc, ac];\r\n      if (!(ac.vertices && bc.vertices)) return vector;\r\n      for (let cc = 0; cc < 2; cc++) {\r\n        const vertices = colliders[cc].vertices;\r\n        if (!vertices) return vector;\r\n        for (let ii = 0; ii < vertices.length; ii++) {\r\n          jj = ii + 1;\r\n          if (jj == vertices.length) {\r\n            jj = 0;\r\n          }\r\n\r\n          let planeX = vertices[jj][1] - vertices[ii][1];\r\n          let planeY = vertices[ii][0] - vertices[jj][0];\r\n          const length = Math.sqrt(planeX * planeX + planeY * planeY);\r\n          planeX /= length;\r\n          planeY /= length;\r\n\r\n          // Project polygon A\r\n          let minA = Number.POSITIVE_INFINITY;\r\n          let maxA = Number.NEGATIVE_INFINITY;\r\n          for (let kk = 0; kk < ac.vertices.length; kk++) {\r\n            const projection =\r\n              planeX * (ax + vector.x + ac.vertices[kk][0]) +\r\n              planeY * (ay + vector.y + ac.vertices[kk][1]);\r\n            if (projection < minA) minA = projection;\r\n            if (projection > maxA) maxA = projection;\r\n          }\r\n\r\n          // Project polygon B\r\n          let minB = Number.POSITIVE_INFINITY;\r\n          let maxB = Number.NEGATIVE_INFINITY;\r\n          for (let kk = 0; kk < bc.vertices.length; kk++) {\r\n            const projection =\r\n              planeX * (bx + bc.vertices[kk][0]) +\r\n              planeY * (by + bc.vertices[kk][1]);\r\n            if (projection < minB) minB = projection;\r\n            if (projection > maxB) maxB = projection;\r\n          }\r\n\r\n          if (minA > maxB || maxA < minB) {\r\n            // No collision\r\n            return vector;\r\n          }\r\n\r\n          const distance = maxB - minA;\r\n          const gap = Math.abs(distance);\r\n          if (gap < absDistance) {\r\n            correctionDistance = distance;\r\n            correctionX = planeX;\r\n            correctionY = planeY;\r\n            absDistance = gap;\r\n          }\r\n        }\r\n      }\r\n\r\n      vector.x += correctionX * correctionDistance;\r\n      vector.y += correctionY * correctionDistance;\r\n\r\n      return vector;\r\n    };\r\n\r\n    /**\r\n     * Does collider A encase B\r\n     * @param  {Number}   ax X-position collider A\r\n     * @param  {Number}   ay Y-position collider A\r\n     * @param  {Collider} ac Collider A\r\n     * @param  {Number}   bx X-position collider B\r\n     * @param  {Number}   by Y-position collider B\r\n     * @param  {Collider} bc Collider B\r\n     * @return {Boolean} true if A encases B\r\n     */\r\n    static encase = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (ac.type == Collider.LIST) {\r\n        if (!ac.colliders) return false;\r\n        for (let ii = 0; ii < ac.colliders.length; ii++) {\r\n          if (Collider.encase(ax, ay, ac.colliders[ii], bx, by, bc)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (bc.type == Collider.LIST) {\r\n        if (!bc.colliders) return false;\r\n        for (let ii = 0; ii < bc.colliders.length; ii++) {\r\n          if (Collider.encase(ax, ay, ac, bx, by, bc.colliders[ii])) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.CIRCLE) {\r\n        // Circle circle test\r\n        return Collider.encaseCircleCircle(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.POLYGON) {\r\n        // Circle polygon test\r\n        return Collider.encaseCirclePolygon(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.CIRCLE) {\r\n        // Polygon circle test\r\n        return Collider.encasePolygonCircle(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.POLYGON) {\r\n        // Polygon polygon test\r\n        return Collider.encasePolygonPolygon(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * Do colliders A & B touch\r\n     * @param  {Number}   ax X-position collider A\r\n     * @param  {Number}   ay Y-position collider A\r\n     * @param  {Collider} ac Collider A\r\n     * @param  {Number}   bx X-position collider B\r\n     * @param  {Number}   by Y-position collider B\r\n     * @param  {Collider} bc Collider B\r\n     * @return {Boolean} true if touching, false otherwise\r\n     */\r\n    static intersect = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n    ) {\r\n      if (ac.type == Collider.LIST) {\r\n        if (!ac.colliders) return false;\r\n        for (let ii = 0; ii < ac.colliders.length; ii++) {\r\n          if (Collider.intersect(ax, ay, ac.colliders[ii], bx, by, bc)) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (bc.type == Collider.LIST) {\r\n        if (!bc.colliders) return false;\r\n        for (let ii = 0; ii < bc.colliders.length; ii++) {\r\n          if (Collider.intersect(ax, ay, ac, bx, by, bc.colliders[ii])) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.CIRCLE) {\r\n        // Circle circle test\r\n        return Collider.intersectCircleCircle(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.POLYGON) {\r\n        // Circle polygon test\r\n        return Collider.intersectCirclePolygon(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.CIRCLE) {\r\n        // Polygon circle test\r\n        return Collider.intersectPolygonCircle(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.POLYGON) {\r\n        // Polygon polygon test\r\n        return Collider.intersectPolygonPolygon(ax, ay, ac, bx, by, bc);\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    /**\r\n     * Move and collide A towards B\r\n     * @param  {Number}   ax X-position collider A\r\n     * @param  {Number}   ay Y-position collider A\r\n     * @param  {Collider} ac Collider A\r\n     * @param  {Number}   bx X-position collider B\r\n     * @param  {Number}   by Y-position collider B\r\n     * @param  {Collider} bc Collider B\r\n     * @param  {Vector}   vector Input movement vector A to B\r\n     * @return {Vector} New movement vector\r\n     */\r\n    static move = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Partial<Polygon>,\r\n      bx: number,\r\n      by: number,\r\n      bc: Partial<Polygon>,\r\n      vector: Vector,\r\n    ) {\r\n      if (ac.type == Collider.LIST) {\r\n        if (!ac.colliders) return vector;\r\n        for (let ii = 0; ii < ac.colliders.length; ii++) {\r\n          vector = Collider.move(ax, ay, ac.colliders[ii], bx, by, bc, vector);\r\n          if (vector.x === 0 && vector.y === 0) {\r\n            break;\r\n          }\r\n        }\r\n        return vector;\r\n      }\r\n\r\n      if (bc.type == Collider.LIST) {\r\n        if (!bc.colliders) return vector;\r\n        for (let ii = 0; ii < bc.colliders.length; ii++) {\r\n          vector = Collider.move(ax, ay, ac, bx, by, bc.colliders[ii], vector);\r\n          if (vector.x === 0 && vector.y === 0) {\r\n            break;\r\n          }\r\n        }\r\n        return vector;\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.CIRCLE) {\r\n        // Circle circle test\r\n        return Collider.moveCircleCircle(ax, ay, ac, bx, by, bc, vector);\r\n      }\r\n\r\n      if (ac.type == Collider.CIRCLE && bc.type == Collider.POLYGON) {\r\n        // Circle polygon test\r\n        return Collider.moveCirclePolygon(ax, ay, ac, bx, by, bc, vector);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.CIRCLE) {\r\n        // Polygon circle test\r\n        return Collider.movePolygonCircle(ax, ay, ac, bx, by, bc, vector);\r\n      }\r\n\r\n      if (ac.type == Collider.POLYGON && bc.type == Collider.POLYGON) {\r\n        // Polygon polygon test\r\n        return Collider.movePolygonPolygon(ax, ay, ac, bx, by, bc, vector);\r\n      }\r\n\r\n      return vector;\r\n    };\r\n\r\n    static treeFromArray = function (colliders: PolygonV[]) {\r\n      while (colliders.length > 1) {\r\n        let shortestDist = Number.POSITIVE_INFINITY;\r\n        let closestNode = -1;\r\n        for (let ii = 1; ii < colliders.length; ii++) {\r\n          const leftDistance = Math.abs(\r\n            colliders[ii].aabbox.right - colliders[0].aabbox.left,\r\n          );\r\n          if (leftDistance < shortestDist) {\r\n            shortestDist = leftDistance;\r\n            closestNode = ii;\r\n            continue;\r\n          }\r\n\r\n          const rightDistance = Math.abs(\r\n            colliders[ii].aabbox.left - colliders[0].aabbox.right,\r\n          );\r\n          if (rightDistance < shortestDist) {\r\n            shortestDist = rightDistance;\r\n            closestNode = ii;\r\n            continue;\r\n          }\r\n\r\n          const topDistance = Math.abs(\r\n            colliders[ii].aabbox.bottom - colliders[0].aabbox.top,\r\n          );\r\n          if (topDistance < shortestDist) {\r\n            shortestDist = topDistance;\r\n            closestNode = ii;\r\n            continue;\r\n          }\r\n\r\n          const bottomDistance = Math.abs(\r\n            colliders[ii].aabbox.top - colliders[0].aabbox.bottom,\r\n          );\r\n          if (bottomDistance < shortestDist) {\r\n            shortestDist = bottomDistance;\r\n            closestNode = ii;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        // Create pairing\r\n        const pair = Collider.createList();\r\n        Collider.addToList(pair, colliders[0]);\r\n        Collider.addToList(pair, colliders[closestNode]);\r\n        colliders.splice(closestNode, 1);\r\n        colliders[0] = pair;\r\n      }\r\n\r\n      return colliders[0];\r\n    };\r\n\r\n    /**\r\n     * Check if A and B roughly intersect with AABBoxes\r\n     * @param  {Number}   ax X-position collider A\r\n     * @param  {Number}   ay Y-position collider A\r\n     * @param  {AABBox}   ac AABBox A\r\n     * @param  {Number}   bx X-position collider B\r\n     * @param  {Number}   by Y-position collider B\r\n     * @param  {AABBox}   bc AABBox B\r\n     * @param  {Number}   vx Adjustment vector of A toB\r\n     * @param  {Number}   vy Adjustment vector of A to B\r\n     * @return {Boolean}  True is AABBoxes intersect\r\n     */\r\n    static aabboxCheck = function (\r\n      ax: number,\r\n      ay: number,\r\n      ac: Aabbox,\r\n      bx: number,\r\n      by: number,\r\n      bc: Aabbox,\r\n      vx?: number,\r\n      vy?: number,\r\n    ) {\r\n      vx = vx || 0;\r\n      vy = vy || 0;\r\n      const left = ax + ac.left + (vx < 0 ? vx : 0);\r\n      if (left > bx + bc.right) {\r\n        return false;\r\n      }\r\n\r\n      const top = ay + ac.top + (vy < 0 ? vy : 0);\r\n      if (top > by + bc.bottom) {\r\n        return false;\r\n      }\r\n\r\n      const right = ax + ac.right + (vx > 0 ? vx : 0);\r\n      if (right < bx + bc.left) {\r\n        return false;\r\n      }\r\n\r\n      const bottom = ay + ac.bottom + (vy > 0 ? vy : 0);\r\n      if (bottom < by + bc.top) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Direction\r\n   * Utility for managing directions\r\n   */\r\n  class Direction {\r\n    static DOWN_LEFT = 1;\r\n    static DOWN = 2;\r\n    static DOWN_RIGHT = 3;\r\n    static LEFT = 4;\r\n    static RIGHT = 6;\r\n    static UP_LEFT = 7;\r\n    static UP = 8;\r\n    static UP_RIGHT = 9;\r\n\r\n    constructor() {\r\n      throw new Error('This is a static class');\r\n    }\r\n\r\n    static isUp = function (d: number) {\r\n      return d >= 7;\r\n    };\r\n\r\n    static isRight = function (d: number) {\r\n      return d % 3 == 0;\r\n    };\r\n\r\n    static isDown = function (d: number) {\r\n      return d <= 3;\r\n    };\r\n\r\n    static isLeft = function (d: number) {\r\n      return (d + 2) % 3 == 0;\r\n    };\r\n\r\n    static fromVector = function (vx: number, vy: number) {\r\n      if (vx && vy) {\r\n        if (vy < 0) {\r\n          if (vx < 0) {\r\n            return Direction.UP_LEFT;\r\n          } else {\r\n            return Direction.UP_RIGHT;\r\n          }\r\n        } else {\r\n          if (vx < 0) {\r\n            return Direction.DOWN_LEFT;\r\n          } else {\r\n            return Direction.DOWN_RIGHT;\r\n          }\r\n        }\r\n      } else if (vx < 0) {\r\n        return Direction.LEFT;\r\n      } else if (vx > 0) {\r\n        return Direction.RIGHT;\r\n      } else if (vy < 0) {\r\n        return Direction.UP;\r\n      }\r\n      return Direction.DOWN;\r\n    };\r\n\r\n    static normalize = function (vx: number, vy: number, length: number) {\r\n      length = length || Math.sqrt(vx * vx + vy * vy);\r\n      return { x: vx / length, y: vy / length, l: length };\r\n    };\r\n\r\n    static normalizeSquare = function (\r\n      vx: number,\r\n      vy: number,\r\n      length?: number,\r\n    ) {\r\n      const angle = Math.atan2(vy, vx);\r\n      const cos = Math.cos(angle);\r\n      const sin = Math.sin(angle);\r\n      if (!length) {\r\n        const absCos = Math.abs(cos);\r\n        const absSin = Math.abs(sin);\r\n        if (absSin <= absCos) {\r\n          length = 1 / absCos;\r\n        } else {\r\n          length = 1 / absSin;\r\n        }\r\n      }\r\n      return { x: vx * length, y: vy * length, l: length };\r\n    };\r\n  }\r\n\r\n  function pruneReplacer(mesh: Partial<Polygon>[]): string {\r\n    return JSON.stringify(\r\n      mesh.map((root) => ({\r\n        ...root,\r\n        colliders: root.colliders?.map((vehicle: Partial<Polygon>) => ({\r\n          ...vehicle,\r\n          colliders: vehicle.colliders?.map((collider) => ({\r\n            ...collider,\r\n            colliders: undefined,\r\n            vertices: undefined,\r\n            aabbox: undefined,\r\n          })),\r\n        })),\r\n      })),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Plugin Commands\r\n   */\r\n\r\n  const logPluginCommandWarning = function (warningMsg: string) {\r\n    const currentEventId = $gameMap._interpreter._eventId;\r\n    const currentEvent = $gameMap.event(currentEventId);\r\n    if (currentEvent.characterName())\r\n      console.warn(\r\n        `EV${currentEventId\r\n          .toString()\r\n          .padStart(3, '0')}(${currentEvent.characterName()}): ${warningMsg}`,\r\n      );\r\n    else\r\n      console.warn(\r\n        `EV${currentEventId.toString().padStart(3, '0')}: ${warningMsg}`,\r\n      );\r\n  };\r\n\r\n  PluginManager.registerCommand(pluginName, 'setPlayerCollider', (args) => {\r\n    const presetCollider = Collider.getPreset(args.colliderPreset);\r\n    if (presetCollider) {\r\n      $gamePlayer.setCollider(presetCollider);\r\n    } else {\r\n      logPluginCommandWarning(\r\n        `Preset Collider (${args.colliderPreset}) not found!`,\r\n      );\r\n    }\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setThisCollider', (args) => {\r\n    const presetCollider = Collider.getPreset(args.colliderPreset);\r\n    if (presetCollider) {\r\n      const eventId = $gameMap._interpreter._eventId;\r\n      const event = $gameMap.event(eventId);\r\n      if (event) {\r\n        event.setCollider(presetCollider);\r\n      } else {\r\n        logPluginCommandWarning(`This Event (${eventId}) not found!`);\r\n      }\r\n    } else {\r\n      logPluginCommandWarning(\r\n        `Preset Collider (${args.colliderPreset}) not found!`,\r\n      );\r\n    }\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setEventCollider', (args) => {\r\n    const presetCollider = Collider.getPreset(args.colliderPreset);\r\n    if (presetCollider) {\r\n      let eventId = args.eventId;\r\n      if (isNaN(eventId)) {\r\n        for (let ii = 0; ii < $dataMap.events.length; ii++) {\r\n          if ($dataMap.events[ii] && $dataMap.events[ii].name === eventId) {\r\n            eventId = $dataMap.events[ii].id;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (isNaN(eventId)) {\r\n        logPluginCommandWarning(`Event (${eventId}) not found!`);\r\n        return;\r\n      }\r\n      const event = $gameMap.event(eventId);\r\n      if (event) {\r\n        event.setCollider(presetCollider);\r\n      } else {\r\n        logPluginCommandWarning(`Event (${eventId}) not found!`);\r\n      }\r\n    } else {\r\n      logPluginCommandWarning(\r\n        `Preset Collider (${args.colliderPreset}) not found!`,\r\n      );\r\n    }\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setVehicleCollider', (args) => {\r\n    const presetCollider = Collider.getPreset(args.colliderPreset);\r\n    if (!presetCollider) {\r\n      logPluginCommandWarning(\r\n        `Preset Collider (${args.colliderPreset}) not found!`,\r\n      );\r\n      return;\r\n    }\r\n    const vehicle = $gameMap.vehicle(args.vehicleId);\r\n    if (!vehicle) {\r\n      logPluginCommandWarning(`Vehicle (${args.vehicleId}) not found!`);\r\n      return;\r\n    }\r\n    vehicle.setCollider(presetCollider);\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setFollowerCollider', (args) => {\r\n    const presetCollider = Collider.getPreset(args.colliderPreset);\r\n    if (!presetCollider) {\r\n      logPluginCommandWarning(\r\n        `Preset Collider (${args.colliderPreset}) not found!`,\r\n      );\r\n      return;\r\n    }\r\n    const follower = $gamePlayer.followers().follower(args.followerId - 1);\r\n    if (!follower) {\r\n      logPluginCommandWarning(`Follower (${args.followerId}) not found!`);\r\n      return;\r\n    }\r\n    follower.setCollider(presetCollider);\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setFollowersDistance', (args) => {\r\n    $gameSystem._followerDistance = args.distance;\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setFollowersFollow', (args) => {\r\n    if (args.followerId === 'all') {\r\n      for (const follower of $gamePlayer.followers()._data) {\r\n        follower.setFrozen(args.shouldFollow);\r\n      }\r\n    } else {\r\n      const follower = $gamePlayer.followers().follower(args.followerId - 1);\r\n      if (!follower) {\r\n        logPluginCommandWarning(`Follower (${args.followerId}) not found!`);\r\n        return;\r\n      }\r\n      follower.setFrozen(args.shouldFollow === 'true');\r\n    }\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'move', (args) => {\r\n    let mover;\r\n    const skip = args.isSkippable === 'true';\r\n    const wait = args.wait === 'true';\r\n    const step = JSON.parse(args.moveCommand);\r\n    //Update mover if needed\r\n    if (!step.mvr) {\r\n      if (!mover) {\r\n        logPluginCommandWarning(`Mover not set!`);\r\n        return;\r\n      }\r\n    } else if (step.mvr === 'event') {\r\n      mover = JSON.stringify(step.moverEventId);\r\n    } else if (step.mvr.startsWith('follower')) {\r\n      // Lower follower number to be 0 based\r\n      const followerNumber = step.mvr.substring('follower'.length);\r\n      step.mvr = String.prototype.concat(\r\n        step.mvr.substring(0, 'follower'.length),\r\n        `${followerNumber - 1}`,\r\n      );\r\n    } else mover = step.mvr;\r\n\r\n    const subMoveArgs = ['move'];\r\n    subMoveArgs.push(mover);\r\n    subMoveArgs.push(step.dir);\r\n    if (step.dir === 'towards' || step.dir === 'away') {\r\n      let target = step.other;\r\n      if (step.other === 'event') {\r\n        target = JSON.stringify(step.moverEventId);\r\n      } else if (step.other.startsWith('follower')) {\r\n        // Lower follower number to be 0 based\r\n        const followerNumber = step.other.substring('follower'.length);\r\n        step.other = String.prototype.concat(\r\n          step.other.substring(0, 'follower'.length),\r\n          `${followerNumber - 1}`,\r\n        );\r\n      }\r\n      subMoveArgs.push(target);\r\n    }\r\n    subMoveArgs.push(step.dist);\r\n    if (wait) subMoveArgs.push('wait');\r\n    if (skip) subMoveArgs.push('skip');\r\n    $gameMap._interpreter.altMovementMoveCharacter(subMoveArgs);\r\n  });\r\n\r\n  PluginManager.registerCommand(pluginName, 'setTouchMouse', (args) => {\r\n    $gameSystem._enableTouchMouse = args.value === 'true';\r\n  });\r\n})();\r\n"]}